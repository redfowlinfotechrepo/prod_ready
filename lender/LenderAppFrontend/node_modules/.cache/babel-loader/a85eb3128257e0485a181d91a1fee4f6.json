{"ast":null,"code":"var _jsxFileName = \"/app/lender/client/LenderAppFrontend/src/AddClientSections/ClientPersonalInfo.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Typography, TextField, Checkbox, FormControlLabel, Button, Alert } from \"@mui/material\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport { AlignHorizontalLeftSharp } from \"@mui/icons-material\";\nconst ClientPersonalInfo = ({\n  activeStep\n}) => {\n  const [centerName, setCenterName] = useState(\"\");\n  const [customerId, setCustomerId] = useState(\"\");\n  const [customerName, setCustomerName] = useState(\"\");\n  const [spouseName, setSpouseName] = useState(\"\");\n  const [fatherName, setFatherName] = useState(\"\");\n  const [motherName, setMotherName] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [isTatchedHouse, setIsTatchedHouse] = useState(false);\n  const [isRoofTiles, setIsRoofTiles] = useState(false);\n  const [isMetalsheetsRoof, setIsMetalsheetsRoof] = useState(false);\n  const [isCementSheetsRoof, setIsCementSheetsRoof] = useState(false);\n  const [isCementConcreteCeil, setIsCementConcreteCeil] = useState(false);\n  const [isHindu, setIsHindu] = useState(false);\n  const [isMuslim, setIsMuslim] = useState(false);\n  const [isChristian, setIsChristian] = useState(false);\n  const [isOthers, setIsOthers] = useState(false);\n  const [isMarried, setIsMarried] = useState(false);\n  const [isSingle, setIsSingle] = useState(false);\n  const [isWidow, setIsWidow] = useState(false);\n  const [isDivorced, setIsDivorced] = useState(false);\n  const [isSeparate, setIsSeparate] = useState(false);\n  const [address, setAddress] = useState(\"\");\n  const [isOwned, setIsOwned] = useState(false);\n  const [isRented, setIsRented] = useState(false);\n  const [residenceCustYr, setResidenceCustYr] = useState(\"\");\n  const [mobileNo1, setMobileNo1] = useState(\"\");\n  const [mobileNo2, setMobileNo2] = useState(\"\");\n  const [SalesExecID, setSalesExecID] = useState(\"\");\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExists, setIsExists] = useState(false);\n  const [dataExists, setDataExists] = useState({});\n\n  //for alerts\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  //for center selection\n  const [selectedCenter, setSelectedCenter] = useState(null);\n  const [listOfCenters, setListOfCenters] = useState([]);\n\n  //to fetch list of centers\n  const fetchListOfCenters = async () => {\n    const response = await axios.get(\"/api/v1/center/getAllCenterDetails\");\n    if (Array.isArray(response.data.centers)) {\n      setListOfCenters(response.data.centers);\n    } else {\n      console.error(\"Invalid response data format:\", response.data.centers);\n    }\n  };\n\n  //CenterOptions format\n  const CenterOptions = listOfCenters.map(center => ({\n    value: center.id,\n    label: center.centerName // Adjust this based on your data structure\n  }));\n  const handleCenterSelect = selectedOption => {\n    setSelectedCenter(selectedOption);\n  };\n\n  //To initalise Family Details\n  const initialiseFamilyDtls = async customerId => {\n    try {\n      const familyDtls = {\n        clientId: customerId\n      };\n      const response = await axios.post(\"/api/v1/client/family/createFamilyMember\", familyDtls);\n      localStorage.setItem(\"familyId\", response.data.id);\n      setSuccessMessage(\"Family Details Initialized\");\n      setShowSuccess(true);\n    } catch (error) {\n      console.log(error);\n      setAlertMessage(\"Family Details not initialized. Please contact the developer\");\n      setShowAlert(true);\n    }\n  };\n\n  //Handle ClientPersonal Save\n  const handleSaveData = async () => {\n    setSalesExecID(localStorage.getItem(\"id\"));\n    const clientPersonalData = {\n      centerId: selectedCenter.label,\n      customerName,\n      spouseName,\n      fatherName,\n      motherName,\n      dateOfBirth,\n      age,\n      address,\n      residenceCustYr,\n      mobileNo1,\n      mobileNo2,\n      isTatchedHouse,\n      isRoofTiles,\n      isMetalsheets: isMetalsheetsRoof,\n      isCementSheetsRoof,\n      isCementConcreteCeil,\n      isHindu,\n      isMuslim,\n      isChristian,\n      isOthers,\n      isMarried,\n      isSingle,\n      isWidow,\n      isDivorced,\n      isSeparate,\n      isOwned,\n      isRented,\n      SalesExecID: localStorage.getItem(\"SalesExecId\") // Corrected assignment\n      // ... add other fields here\n    };\n    try {\n      // Perform action to save data here (e.g., send to API, update state, etc.)\n      const flag = await axios.get(`/api/v1/client/getAllClientPersonalDetails?MobileNo1=${clientPersonalData.mobileNo1}`, clientPersonalData);\n      if (flag.data.count === 0) {\n        const response = await axios.post(\"/api/v1/client/createClientPersonalDetails\", clientPersonalData);\n        setCustomerId(response.data.customerId);\n        const familyDtls = await initialiseFamilyDtls(response.data.customerId);\n        localStorage.setItem(\"CustomerId\", response.data.customerId);\n        localStorage.setItem(\"flag\", 1);\n        setIsSaved(true);\n        setSuccessMessage(\"Client Created Successfully. Proceed Further.\");\n      } else {\n        setAlertMessage(\"Client Already registered with this Phone Number.\");\n        setShowAlert(true);\n      }\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  //Handle ClientPersonal Update\n  const handleUpdateData = async () => {\n    setSalesExecID(localStorage.getItem(\"id\"));\n    const clientPersonalData = {\n      centerId: selectedCenter.value,\n      customerName,\n      spouseName,\n      fatherName,\n      motherName,\n      dateOfBirth,\n      age,\n      address,\n      residenceCustYr,\n      mobileNo1,\n      mobileNo2,\n      isTatchedHouse,\n      isRoofTiles,\n      isMetalsheets: isMetalsheetsRoof,\n      isCementSheetsRoof,\n      isCementConcreteCeil,\n      isHindu,\n      isMuslim,\n      isChristian,\n      isOthers,\n      isMarried,\n      isSingle,\n      isWidow,\n      isDivorced,\n      isSeparate,\n      isOwned,\n      isRented,\n      SalesExecID: localStorage.getItem(\"id\") // Corrected assignment\n      // ... add other fields here\n    };\n    console.log(\"clientPersonalData: \", clientPersonalData);\n    try {\n      const response = await axios.patch(`/api/v1/client/updateClientPersonalDetailsById/${customerId}`, clientPersonalData);\n      console.log(response);\n      if (response.status === 200) {\n        setSuccessMessage(\"Data Updated Successfully\");\n        setShowSuccess(true);\n      }\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  //Set Data if available\n  const setFormData = async customerId => {\n    try {\n      const response = await axios.get(`/api/v1/client/getClientPersonalDetailsById/${customerId}`);\n      const dataExists = response.data.clientPersonal;\n      console.log(dataExists);\n      const selectedCenterOption = CenterOptions.find(option => option.value === dataExists.centerId);\n      // console.log(\"yes:\", selectedCenterOption);\n\n      setSelectedCenter(selectedCenterOption);\n      setCustomerId(dataExists.CustomerId || \"\");\n      setCustomerName(dataExists.CustomerName || \"\");\n      setSpouseName(dataExists.SpouseName || \"\");\n      setFatherName(dataExists.FatherName || \"\");\n      setMotherName(dataExists.MotherName || \"\");\n      setDateOfBirth(dataExists.DateOfBirth || \"\");\n      setAge(dataExists.Age || \"\");\n      setIsTatchedHouse(Boolean(dataExists.isTatchedHouse));\n      setIsRoofTiles(Boolean(dataExists.isRoofTiles));\n      setIsMetalsheetsRoof(Boolean(dataExists.isMetalsheets));\n      setIsCementSheetsRoof(Boolean(dataExists.isCementSheetsRoof));\n      setIsCementConcreteCeil(Boolean(dataExists.isCementConcreteCeil));\n      setIsHindu(Boolean(dataExists.isHindu));\n      setIsMuslim(Boolean(dataExists.isMuslim));\n      setIsChristian(Boolean(dataExists.isChristian));\n      setIsOthers(Boolean(dataExists.isOthers));\n      setIsMarried(Boolean(dataExists.isMarried));\n      setIsSingle(Boolean(dataExists.isSingle));\n      setIsWidow(Boolean(dataExists.isWidow));\n      setIsDivorced(Boolean(dataExists.isDivorced));\n      setIsSeparate(Boolean(dataExists.isSeparate));\n      setAddress(dataExists.Address || \"\");\n      setIsOwned(Boolean(dataExists.isOwned));\n      setIsRented(Boolean(dataExists.isRented));\n      setResidenceCustYr(dataExists.ResidenceCustYr || \"\");\n      setMobileNo1(dataExists.MobileNo1 || \"\");\n      setMobileNo2(dataExists.MobileNo2 || \"\");\n      setSalesExecID(dataExists.SalesExecID || \"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchListOfCenters();\n    const customerId = localStorage.getItem(\"CustomerId\");\n    if (customerId) {\n      setIsExists(true);\n      setIsSaved(true);\n      setFormData(customerId);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    p: 5,\n    id: \"client-personal-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      border: \"1px solid #ccc\",\n      p: 2,\n      borderRadius: \"5px\",\n      marginBottom: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      marginBottom: 1,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, \"Personal Information\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      borderRadius: \"10px\",\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    styles: {\n      control: baseStyles => ({\n        ...baseStyles,\n        width: \"250px\",\n        height: \"50px\",\n        zIndex: \"0\"\n      }),\n      provided: baseStyles => ({\n        ...baseStyles,\n        zIndex: \"9999 !important\"\n      })\n    },\n    value: selectedCenter // Ensure 'value' is being set correctly\n    ,\n    onChange: handleCenterSelect,\n    options: CenterOptions,\n    placeholder: \"Select Center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Customer Name\",\n    value: customerName,\n    onChange: e => setCustomerName(e.target.value),\n    margin: \"normal\",\n    sx: {\n      width: \"350px\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Spouse Name\",\n    value: spouseName,\n    onChange: e => setSpouseName(e.target.value),\n    margin: \"normal\",\n    sx: {\n      width: \"350px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Father Name\",\n    value: fatherName,\n    onChange: e => setFatherName(e.target.value),\n    margin: \"normal\",\n    sx: {\n      width: \"250px\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Mother Name\",\n    value: motherName,\n    onChange: e => setMotherName(e.target.value),\n    margin: \"normal\",\n    sx: {\n      width: \"250px\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    label: \"Date of Birth\",\n    value: dateOfBirth,\n    onChange: e => setDateOfBirth(e.target.value),\n    InputLabelProps: {\n      shrink: true\n    },\n    margin: \"normal\",\n    sx: {\n      width: \"200px\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    label: \"Age\",\n    value: age,\n    onChange: e => setAge(e.target.value),\n    margin: \"normal\",\n    sx: {\n      width: \"200px\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      border: \"1px solid #ccc\",\n      p: 2,\n      borderRadius: \"5px\",\n      marginBottom: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      marginBottom: 1,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 11\n    }\n  }, \"House Status\"), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isTatchedHouse // Use the state directly for checked property\n      ,\n      onChange: e => setIsTatchedHouse(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isTatchedHouse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 15\n      }\n    }),\n    label: \"Tatched House\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isRoofTiles // Use the state directly for checked property\n      ,\n      onChange: e => setIsRoofTiles(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isRoofTiles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 15\n      }\n    }),\n    label: \"Roof Tiled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isMetalsheetsRoof // Use the state directly for checked property\n      ,\n      onChange: e => setIsMetalsheetsRoof(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isMetalsheetsRoof\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 15\n      }\n    }),\n    label: \"Metal Sheet Roof\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isCementSheetsRoof // Use the state directly for checked property\n      ,\n      onChange: e => setIsCementSheetsRoof(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isCementSheetsRoof\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 15\n      }\n    }),\n    label: \"Cement Sheet Roof\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isCementConcreteCeil // Use the state directly for checked property\n      ,\n      onChange: e => setIsCementConcreteCeil(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isCementConcreteCeil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 15\n      }\n    }),\n    label: \"Cement Concrete Ceiling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      border: \"1px solid #ccc\",\n      p: 2,\n      borderRadius: \"5px\",\n      marginBottom: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      marginBottom: 1,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 11\n    }\n  }, \"Religion\"), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isHindu // Use the state directly for checked property\n      ,\n      onChange: e => setIsHindu(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isHindu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 15\n      }\n    }),\n    label: \"Hindu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isMuslim // Use the state directly for checked property\n      ,\n      onChange: e => setIsMuslim(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isMuslim\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 15\n      }\n    }),\n    label: \"Muslim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isChristian // Use the state directly for checked property\n      ,\n      onChange: e => setIsChristian(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isChristian\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 15\n      }\n    }),\n    label: \"Muslim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isOthers // Use the state directly for checked property\n      ,\n      onChange: e => setIsOthers(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isOthers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 15\n      }\n    }),\n    label: \"Muslim\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      border: \"1px solid #ccc\",\n      p: 2,\n      borderRadius: \"5px\",\n      marginBottom: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      marginBottom: 1,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 11\n    }\n  }, \"Martial Status\"), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isMarried // Use the state directly for checked property\n      ,\n      onChange: e => setIsMarried(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isMarried\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 15\n      }\n    }),\n    label: \"Married\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isSingle // Use the state directly for checked property\n      ,\n      onChange: e => setIsSingle(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isSingle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 15\n      }\n    }),\n    label: \"Single\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isWidow // Use the state directly for checked property\n      ,\n      onChange: e => setIsWidow(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isWidow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 15\n      }\n    }),\n    label: \"Widowed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isDivorced // Use the state directly for checked property\n      ,\n      onChange: e => setIsDivorced(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isDivorced\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 15\n      }\n    }),\n    label: \"Widowed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isSeparate // Use the state directly for checked property\n      ,\n      onChange: e => setIsSeparate(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isSeparate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 15\n      }\n    }),\n    label: \"Separated\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      border: \"1px solid #ccc\",\n      p: 2,\n      borderRadius: \"5px\",\n      marginBottom: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      marginBottom: 1,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 11\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Address\",\n    multiline: true,\n    rows: 4 // Adjust the number of rows as needed\n    ,\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true // Takes the full width of the container\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isOwned // Use the state directly for checked property\n      ,\n      onChange: e => setIsOwned(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isOwned\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 15\n      }\n    }),\n    label: \"Owned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isRented // Use the state directly for checked property\n      ,\n      onChange: e => setIsRented(e.target.checked) // Update the state directly with the checked value\n      ,\n      name: \"isRented\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 15\n      }\n    }),\n    label: \"Rented\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    label: \"Residence Customer year\",\n    value: residenceCustYr,\n    name: \"residenceCustYr\",\n    onChange: e => setResidenceCustYr(e.target.value),\n    margin: \"normal\",\n    sx: {\n      width: \"200px\",\n      marginRight: \"10px\"\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      border: \"1px solid #ccc\",\n      p: 2,\n      borderRadius: \"5px\",\n      marginBottom: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    sx: {\n      marginBottom: 1,\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 11\n    }\n  }, \"Contact\"), /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    label: \"Mobile Number\",\n    value: mobileNo1,\n    onChange: e => setMobileNo1(e.target.value),\n    margin: \"normal\",\n    sx: {\n      width: \"200px\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    label: \"Alternate Mobile Number\",\n    value: mobileNo2,\n    onChange: e => setMobileNo2(e.target.value),\n    margin: \"normal\",\n    sx: {\n      width: \"200px\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 11\n    }\n  }))), showAlert && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 21\n    }\n  }, alertMessage), showSuccess && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 23\n    }\n  }, successMessage), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 7\n    }\n  }, !isSaved ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: handleSaveData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 11\n    }\n  }, \"Save Data\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: handleUpdateData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 11\n    }\n  }, \"Update Data\")));\n};\nexport default ClientPersonalInfo;","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","TextField","Checkbox","FormControlLabel","Button","Alert","axios","Select","AlignHorizontalLeftSharp","ClientPersonalInfo","activeStep","centerName","setCenterName","customerId","setCustomerId","customerName","setCustomerName","spouseName","setSpouseName","fatherName","setFatherName","motherName","setMotherName","dateOfBirth","setDateOfBirth","age","setAge","isTatchedHouse","setIsTatchedHouse","isRoofTiles","setIsRoofTiles","isMetalsheetsRoof","setIsMetalsheetsRoof","isCementSheetsRoof","setIsCementSheetsRoof","isCementConcreteCeil","setIsCementConcreteCeil","isHindu","setIsHindu","isMuslim","setIsMuslim","isChristian","setIsChristian","isOthers","setIsOthers","isMarried","setIsMarried","isSingle","setIsSingle","isWidow","setIsWidow","isDivorced","setIsDivorced","isSeparate","setIsSeparate","address","setAddress","isOwned","setIsOwned","isRented","setIsRented","residenceCustYr","setResidenceCustYr","mobileNo1","setMobileNo1","mobileNo2","setMobileNo2","SalesExecID","setSalesExecID","isSaved","setIsSaved","isExists","setIsExists","dataExists","setDataExists","showAlert","setShowAlert","alertMessage","setAlertMessage","showSuccess","setShowSuccess","successMessage","setSuccessMessage","selectedCenter","setSelectedCenter","listOfCenters","setListOfCenters","fetchListOfCenters","response","get","Array","isArray","data","centers","console","error","CenterOptions","map","center","value","id","label","handleCenterSelect","selectedOption","initialiseFamilyDtls","familyDtls","clientId","post","localStorage","setItem","log","handleSaveData","getItem","clientPersonalData","centerId","isMetalsheets","flag","count","handleUpdateData","patch","status","setFormData","clientPersonal","selectedCenterOption","find","option","CustomerId","CustomerName","SpouseName","FatherName","MotherName","DateOfBirth","Age","Boolean","Address","ResidenceCustYr","MobileNo1","MobileNo2","createElement","Fragment","p","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sx","border","borderRadius","marginBottom","variant","fontWeight","display","justifyContent","alignItems","marginTop","styles","control","baseStyles","width","height","zIndex","provided","onChange","options","placeholder","e","target","margin","marginRight","type","InputLabelProps","shrink","checked","name","multiline","rows","fullWidth","severity","padding","onClick"],"sources":["/app/lender/client/LenderAppFrontend/src/AddClientSections/ClientPersonalInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n  Button,\n  Alert,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport { AlignHorizontalLeftSharp } from \"@mui/icons-material\";\n\nconst ClientPersonalInfo = ({ activeStep }) => {\n  const [centerName, setCenterName] = useState(\"\");\n  const [customerId, setCustomerId] = useState(\"\");\n  const [customerName, setCustomerName] = useState(\"\");\n  const [spouseName, setSpouseName] = useState(\"\");\n  const [fatherName, setFatherName] = useState(\"\");\n  const [motherName, setMotherName] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [isTatchedHouse, setIsTatchedHouse] = useState(false);\n  const [isRoofTiles, setIsRoofTiles] = useState(false);\n  const [isMetalsheetsRoof, setIsMetalsheetsRoof] = useState(false);\n  const [isCementSheetsRoof, setIsCementSheetsRoof] = useState(false);\n  const [isCementConcreteCeil, setIsCementConcreteCeil] = useState(false);\n  const [isHindu, setIsHindu] = useState(false);\n  const [isMuslim, setIsMuslim] = useState(false);\n  const [isChristian, setIsChristian] = useState(false);\n  const [isOthers, setIsOthers] = useState(false);\n  const [isMarried, setIsMarried] = useState(false);\n  const [isSingle, setIsSingle] = useState(false);\n  const [isWidow, setIsWidow] = useState(false);\n  const [isDivorced, setIsDivorced] = useState(false);\n  const [isSeparate, setIsSeparate] = useState(false);\n  const [address, setAddress] = useState(\"\");\n  const [isOwned, setIsOwned] = useState(false);\n  const [isRented, setIsRented] = useState(false);\n  const [residenceCustYr, setResidenceCustYr] = useState(\"\");\n  const [mobileNo1, setMobileNo1] = useState(\"\");\n  const [mobileNo2, setMobileNo2] = useState(\"\");\n  const [SalesExecID, setSalesExecID] = useState(\"\");\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExists, setIsExists] = useState(false);\n  const [dataExists, setDataExists] = useState({});\n\n  //for alerts\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  //for center selection\n  const [selectedCenter, setSelectedCenter] = useState(null);\n  const [listOfCenters, setListOfCenters] = useState([]);\n\n  //to fetch list of centers\n  const fetchListOfCenters = async () => {\n    const response = await axios.get(\"/api/v1/center/getAllCenterDetails\");\n    if (Array.isArray(response.data.centers)) {\n      setListOfCenters(response.data.centers);\n    } else {\n      console.error(\"Invalid response data format:\", response.data.centers);\n    }\n  };\n\n  //CenterOptions format\n  const CenterOptions = listOfCenters.map((center) => ({\n    value: center.id,\n    label: center.centerName, // Adjust this based on your data structure\n  }));\n\n  const handleCenterSelect = (selectedOption) => {\n    setSelectedCenter(selectedOption);\n  };\n\n  //To initalise Family Details\n  const initialiseFamilyDtls = async (customerId) => {\n    try {\n      const familyDtls = {\n        clientId: customerId,\n      };\n      const response = await axios.post(\n        \"/api/v1/client/family/createFamilyMember\",\n        familyDtls\n      );\n      localStorage.setItem(\"familyId\", response.data.id);\n      setSuccessMessage(\"Family Details Initialized\");\n      setShowSuccess(true);\n    } catch (error) {\n      console.log(error);\n      setAlertMessage(\n        \"Family Details not initialized. Please contact the developer\"\n      );\n      setShowAlert(true);\n    }\n  };\n\n  //Handle ClientPersonal Save\n  const handleSaveData = async () => {\n    setSalesExecID(localStorage.getItem(\"id\"));\n\n    const clientPersonalData = {\n      centerId: selectedCenter.label,\n      customerName,\n      spouseName,\n      fatherName,\n      motherName,\n      dateOfBirth,\n      age,\n      address,\n      residenceCustYr,\n      mobileNo1,\n      mobileNo2,\n      isTatchedHouse,\n      isRoofTiles,\n      isMetalsheets: isMetalsheetsRoof,\n      isCementSheetsRoof,\n      isCementConcreteCeil,\n      isHindu,\n      isMuslim,\n      isChristian,\n      isOthers,\n      isMarried,\n      isSingle,\n      isWidow,\n      isDivorced,\n      isSeparate,\n      isOwned,\n      isRented,\n      SalesExecID: localStorage.getItem(\"SalesExecId\"), // Corrected assignment\n      // ... add other fields here\n    };\n\n    try {\n      // Perform action to save data here (e.g., send to API, update state, etc.)\n      const flag = await axios.get(\n        `/api/v1/client/getAllClientPersonalDetails?MobileNo1=${clientPersonalData.mobileNo1}`,\n        clientPersonalData\n      );\n\n      if (flag.data.count === 0) {\n        const response = await axios.post(\n          \"/api/v1/client/createClientPersonalDetails\",\n          clientPersonalData\n        );\n\n        setCustomerId(response.data.customerId);\n        const familyDtls = await initialiseFamilyDtls(response.data.customerId);\n        localStorage.setItem(\"CustomerId\", response.data.customerId);\n        localStorage.setItem(\"flag\", 1);\n        setIsSaved(true);\n        setSuccessMessage(\"Client Created Successfully. Proceed Further.\");\n      } else {\n        setAlertMessage(\"Client Already registered with this Phone Number.\");\n        setShowAlert(true);\n      }\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  //Handle ClientPersonal Update\n  const handleUpdateData = async () => {\n    setSalesExecID(localStorage.getItem(\"id\"));\n\n    const clientPersonalData = {\n      centerId: selectedCenter.value,\n      customerName,\n      spouseName,\n      fatherName,\n      motherName,\n      dateOfBirth,\n      age,\n      address,\n      residenceCustYr,\n      mobileNo1,\n      mobileNo2,\n      isTatchedHouse,\n      isRoofTiles,\n      isMetalsheets: isMetalsheetsRoof,\n      isCementSheetsRoof,\n      isCementConcreteCeil,\n      isHindu,\n      isMuslim,\n      isChristian,\n      isOthers,\n      isMarried,\n      isSingle,\n      isWidow,\n      isDivorced,\n      isSeparate,\n      isOwned,\n      isRented,\n      SalesExecID: localStorage.getItem(\"id\"), // Corrected assignment\n      // ... add other fields here\n    };\n    console.log(\"clientPersonalData: \", clientPersonalData);\n\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/updateClientPersonalDetailsById/${customerId}`,\n        clientPersonalData\n      );\n      console.log(response);\n      if (response.status === 200) {\n        setSuccessMessage(\"Data Updated Successfully\");\n        setShowSuccess(true);\n      }\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  //Set Data if available\n  const setFormData = async (customerId) => {\n    try {\n      const response = await axios.get(\n        `/api/v1/client/getClientPersonalDetailsById/${customerId}`\n      );\n\n      const dataExists = response.data.clientPersonal;\n      console.log(dataExists);\n      const selectedCenterOption = CenterOptions.find(\n        (option) => option.value === dataExists.centerId\n      );\n      // console.log(\"yes:\", selectedCenterOption);\n\n      setSelectedCenter(selectedCenterOption);\n      setCustomerId(dataExists.CustomerId || \"\");\n      setCustomerName(dataExists.CustomerName || \"\");\n      setSpouseName(dataExists.SpouseName || \"\");\n      setFatherName(dataExists.FatherName || \"\");\n      setMotherName(dataExists.MotherName || \"\");\n      setDateOfBirth(dataExists.DateOfBirth || \"\");\n      setAge(dataExists.Age || \"\");\n      setIsTatchedHouse(Boolean(dataExists.isTatchedHouse));\n      setIsRoofTiles(Boolean(dataExists.isRoofTiles));\n      setIsMetalsheetsRoof(Boolean(dataExists.isMetalsheets));\n      setIsCementSheetsRoof(Boolean(dataExists.isCementSheetsRoof));\n      setIsCementConcreteCeil(Boolean(dataExists.isCementConcreteCeil));\n      setIsHindu(Boolean(dataExists.isHindu));\n      setIsMuslim(Boolean(dataExists.isMuslim));\n      setIsChristian(Boolean(dataExists.isChristian));\n      setIsOthers(Boolean(dataExists.isOthers));\n      setIsMarried(Boolean(dataExists.isMarried));\n      setIsSingle(Boolean(dataExists.isSingle));\n      setIsWidow(Boolean(dataExists.isWidow));\n      setIsDivorced(Boolean(dataExists.isDivorced));\n      setIsSeparate(Boolean(dataExists.isSeparate));\n      setAddress(dataExists.Address || \"\");\n      setIsOwned(Boolean(dataExists.isOwned));\n      setIsRented(Boolean(dataExists.isRented));\n      setResidenceCustYr(dataExists.ResidenceCustYr || \"\");\n      setMobileNo1(dataExists.MobileNo1 || \"\");\n      setMobileNo2(dataExists.MobileNo2 || \"\");\n      setSalesExecID(dataExists.SalesExecID || \"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchListOfCenters();\n    const customerId = localStorage.getItem(\"CustomerId\");\n    if (customerId) {\n      setIsExists(true);\n      setIsSaved(true);\n      setFormData(customerId);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box p={5} id=\"client-personal-info\">\n        {/* Personal info */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Personal Information\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              borderRadius: \"10px\",\n              marginTop: \"10px\",\n            }}\n          >\n            <Select\n              styles={{\n                control: (baseStyles) => ({\n                  ...baseStyles,\n                  width: \"250px\",\n                  height: \"50px\",\n                  zIndex: \"0\",\n                }),\n                provided: (baseStyles) => ({\n                  ...baseStyles,\n                  zIndex: \"9999 !important\",\n                }),\n              }}\n              value={selectedCenter} // Ensure 'value' is being set correctly\n              onChange={handleCenterSelect}\n              options={CenterOptions}\n              placeholder=\"Select Center\"\n            />\n          </Box>\n          <br />\n          <TextField\n            label=\"Customer Name\"\n            value={customerName}\n            onChange={(e) => setCustomerName(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Spouse Name\"\n            value={spouseName}\n            onChange={(e) => setSpouseName(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\" }}\n          />\n          <br />\n          <TextField\n            label=\"Father Name\"\n            value={fatherName}\n            onChange={(e) => setFatherName(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Mother Name\"\n            value={motherName}\n            onChange={(e) => setMotherName(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"date\"\n            label=\"Date of Birth\"\n            value={dateOfBirth}\n            onChange={(e) => setDateOfBirth(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Age\"\n            value={age}\n            onChange={(e) => setAge(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n        </Box>\n        <br />\n        {/* House Status */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            House Status\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isTatchedHouse} // Use the state directly for checked property\n                onChange={(e) => setIsTatchedHouse(e.target.checked)} // Update the state directly with the checked value\n                name=\"isTatchedHouse\"\n              />\n            }\n            label=\"Tatched House\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isRoofTiles} // Use the state directly for checked property\n                onChange={(e) => setIsRoofTiles(e.target.checked)} // Update the state directly with the checked value\n                name=\"isRoofTiles\"\n              />\n            }\n            label=\"Roof Tiled\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isMetalsheetsRoof} // Use the state directly for checked property\n                onChange={(e) => setIsMetalsheetsRoof(e.target.checked)} // Update the state directly with the checked value\n                name=\"isMetalsheetsRoof\"\n              />\n            }\n            label=\"Metal Sheet Roof\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isCementSheetsRoof} // Use the state directly for checked property\n                onChange={(e) => setIsCementSheetsRoof(e.target.checked)} // Update the state directly with the checked value\n                name=\"isCementSheetsRoof\"\n              />\n            }\n            label=\"Cement Sheet Roof\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isCementConcreteCeil} // Use the state directly for checked property\n                onChange={(e) => setIsCementConcreteCeil(e.target.checked)} // Update the state directly with the checked value\n                name=\"isCementConcreteCeil\"\n              />\n            }\n            label=\"Cement Concrete Ceiling\"\n          />\n        </Box>\n        {/* Religion */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Religion\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isHindu} // Use the state directly for checked property\n                onChange={(e) => setIsHindu(e.target.checked)} // Update the state directly with the checked value\n                name=\"isHindu\"\n              />\n            }\n            label=\"Hindu\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isMuslim} // Use the state directly for checked property\n                onChange={(e) => setIsMuslim(e.target.checked)} // Update the state directly with the checked value\n                name=\"isMuslim\"\n              />\n            }\n            label=\"Muslim\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isChristian} // Use the state directly for checked property\n                onChange={(e) => setIsChristian(e.target.checked)} // Update the state directly with the checked value\n                name=\"isChristian\"\n              />\n            }\n            label=\"Muslim\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isOthers} // Use the state directly for checked property\n                onChange={(e) => setIsOthers(e.target.checked)} // Update the state directly with the checked value\n                name=\"isOthers\"\n              />\n            }\n            label=\"Muslim\"\n          />\n        </Box>\n        {/* Martial Status */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Martial Status\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isMarried} // Use the state directly for checked property\n                onChange={(e) => setIsMarried(e.target.checked)} // Update the state directly with the checked value\n                name=\"isMarried\"\n              />\n            }\n            label=\"Married\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSingle} // Use the state directly for checked property\n                onChange={(e) => setIsSingle(e.target.checked)} // Update the state directly with the checked value\n                name=\"isSingle\"\n              />\n            }\n            label=\"Single\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isWidow} // Use the state directly for checked property\n                onChange={(e) => setIsWidow(e.target.checked)} // Update the state directly with the checked value\n                name=\"isWidow\"\n              />\n            }\n            label=\"Widowed\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isDivorced} // Use the state directly for checked property\n                onChange={(e) => setIsDivorced(e.target.checked)} // Update the state directly with the checked value\n                name=\"isDivorced\"\n              />\n            }\n            label=\"Widowed\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSeparate} // Use the state directly for checked property\n                onChange={(e) => setIsSeparate(e.target.checked)} // Update the state directly with the checked value\n                name=\"isSeparate\"\n              />\n            }\n            label=\"Separated\"\n          />\n        </Box>\n        {/* Address */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Address\n          </Typography>\n          <TextField\n            label=\"Address\"\n            multiline\n            rows={4} // Adjust the number of rows as needed\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth // Takes the full width of the container\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isOwned} // Use the state directly for checked property\n                onChange={(e) => setIsOwned(e.target.checked)} // Update the state directly with the checked value\n                name=\"isOwned\"\n              />\n            }\n            label=\"Owned\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isRented} // Use the state directly for checked property\n                onChange={(e) => setIsRented(e.target.checked)} // Update the state directly with the checked value\n                name=\"isRented\"\n              />\n            }\n            label=\"Rented\"\n          />\n          <TextField\n            type=\"number\"\n            label=\"Residence Customer year\"\n            value={residenceCustYr}\n            name=\"residenceCustYr\"\n            onChange={(e) => setResidenceCustYr(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </Box>\n        {/* Mobile Number */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Contact\n          </Typography>\n\n          <TextField\n            type=\"number\"\n            label=\"Mobile Number\"\n            value={mobileNo1}\n            onChange={(e) => setMobileNo1(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Alternate Mobile Number\"\n            value={mobileNo2}\n            onChange={(e) => setMobileNo2(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n        </Box>\n\n        {/* Add more TextField or other input components for each field */}\n        {/* Display completion message or complete step button */}\n      </Box>\n      {showAlert && <Alert severity=\"error\">{alertMessage}</Alert>}\n      {showSuccess && <Alert severity=\"success\">{successMessage}</Alert>}\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          padding: \"5px\",\n        }}\n      >\n        {!isSaved ? (\n          <Button variant=\"outlined\" onClick={handleSaveData}>\n            Save Data\n          </Button>\n        ) : (\n          <Button variant=\"outlined\" onClick={handleUpdateData}>\n            Update Data\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default ClientPersonalInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}