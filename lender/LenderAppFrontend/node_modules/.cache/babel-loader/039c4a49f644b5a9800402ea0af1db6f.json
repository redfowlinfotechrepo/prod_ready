{"ast":null,"code":"var _jsxFileName = \"/app/lender/client/LenderAppFrontend/src/Pages/SalesExecutiveDashboardPage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport SalesExecNavbar from \"../Components/SalesExecNavbar\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport { Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Radio, RadioGroup, FormControlLabel, TablePagination, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Card, CardActionArea, CardContent, CardHeader, ListItem, List, ListItemText, Avatar, ListItemAvatar } from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nconst SalesExecutiveDashboardPage = () => {\n  const salesExecId = localStorage.getItem(\"SalesExecId\");\n  const [clientDtlRows, setClientDtlRows] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const alternateRowColor = index => {\n    const backgroundColor = index % 2 === 0 ? \"grey.300\" : \"#f2f2f2\"; // Black and grayish colors\n    const textColor = index % 2 === 0 ? \"white\" : \"black\"; // White and black text colors\n    return {\n      backgroundColor,\n      color: textColor\n    };\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  //for UpdateClientDialogue\n  const [openClientUpdateDialogue, setOpenClientUpdateDialogue] = useState(false);\n  const [dialogueClientName, setDialogueContentName] = useState(\"\");\n  const [dialogueClientPhone, setDialogueContentPhone] = useState(\"\");\n\n  //for center selection\n  const [selectedCenter, setSelectedCenter] = useState({\n    value: \"all\",\n    label: \"All\"\n  });\n  const [selectedCenterId, setSelectedCenterId] = useState(\"all\");\n  const [listOfCenters, setListOfCenters] = useState([]);\n  const CenterOptions = [{\n    value: \"all\",\n    label: \"All\"\n  },\n  // Add this line for the \"All\" option\n  ...listOfCenters.map(center => ({\n    value: center.id,\n    label: center.centerName,\n    centerCode: center.centerCode,\n    IFSC: center.IFSC,\n    Incharge: center.centerIncharge\n  }))];\n\n  //to fetch CenterDtls\n  const fetchCenterRows = async () => {\n    try {\n      const response = await axios.get(\"/api/v1/center/getAllCenterDetails\");\n      setListOfCenters(response.data.centers);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleCenterSelect = selectedOption => {\n    setSelectedCenter(selectedOption);\n    setSelectedCenterId(selectedOption.value);\n    fetchClientLoanDtls(salesExecId, selectedOption.value);\n  };\n\n  //fetched clientLoanDetails then pass to CLientDtls func to get client's name\n  const fetchClientLoanDtls = async (salesExecId, selectedCenterId) => {\n    try {\n      let url;\n      if (selectedCenterId === \"all\") {\n        // If the selectedCenterId is \"all\", fetch all entries without specifying a CenterID\n        url = `/api/v1/MoneyRecord/getAllcashFlow?SalesExecID=${salesExecId}`;\n      } else {\n        // If a specific center is selected, fetch entries with the specified CenterID\n        url = `/api/v1/MoneyRecord/getAllcashFlow?SalesExecID=${salesExecId}&CenterID=${selectedCenterId}`;\n      }\n      const response = await axios.get(url);\n      const entries = response.data.entries;\n      console.log(entries);\n      const clientDetailsPromises = entries.map(async entry => {\n        const clientDetails = await fetchClientDetails(entry.CustomerID, entry);\n        return {\n          ...entry,\n          clientName: clientDetails.clientName,\n          clientPhone: clientDetails.clientPhone,\n          clientAddress: clientDetails.clientAddress\n        };\n      });\n      const updatedEntries = await Promise.all(clientDetailsPromises);\n      setClientDtlRows(updatedEntries);\n      console.log(\"update:\", updatedEntries);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const fetchClientDetails = async (clientId, row) => {\n    try {\n      const response = await axios.get(`/api/v1/client/getClientPersonalDetailsById/${clientId}`);\n      const clientName = response.data.clientPersonal.CustomerName;\n      const clientPhone = response.data.clientPersonal.MobileNo1;\n      const clientAddress = response.data.clientPersonal.Address;\n      return {\n        ...row,\n        clientName,\n        clientPhone,\n        clientAddress\n      };\n    } catch (error) {\n      console.log(error);\n      return row; // Return the original row in case of an error\n    }\n  };\n  useEffect(() => {\n    fetchCenterRows();\n    fetchClientLoanDtls(salesExecId, selectedCenterId); // Add this line\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SalesExecNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      backgroundColor: \"white\",\n      width: \"100%\",\n      minHeight: \"40vh\",\n      padding: \"20px\" // Adding padding to create space around the cards\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"stretch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: \"100px\",\n      backgroundColor: \"#A4BE7B\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"20px\",\n      // Padding for the inner Box\n      borderRadius: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    styles: {\n      control: baseStyles => ({\n        ...baseStyles,\n        width: \"250px\",\n        height: \"50px\",\n        zIndex: \"0\"\n      }),\n      provided: baseStyles => ({\n        ...baseStyles,\n        zIndex: \"9999 !important\"\n      })\n    },\n    value: selectedCenter // Ensure 'value' is being set correctly\n    ,\n    onChange: handleCenterSelect,\n    options: CenterOptions,\n    placeholder: \"Select Center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      marginTop: \"10px\",\n      height: \"300px\",\n      backgroundColor: \"#A4BE7B\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderRadius: \"10px\",\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    sx: {\n      height: \"100%\",\n      width: \"100%\",\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, \"Center Details\"), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, selectedCenter && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subheading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 27\n    }\n  }, \"Center Name: \", selectedCenter.label), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subheading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 27\n    }\n  }, \"Center Code: \", selectedCenter.centerCode), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subheading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 27\n    }\n  }, \"IFSC: \", selectedCenter.IFSC), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subheading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 27\n    }\n  }, \"Incharge: \", selectedCenter.Incharge), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 27\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      height: \"100%\",\n      backgroundColor: \"#5F8D4E\",\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      // Stack items vertically\n      alignItems: \"flex-end\",\n      // Align items to the right\n      padding: \"20px\",\n      // Padding for the inner Box\n      borderRadius: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    sx: {\n      backgroundColor: \"black\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 27\n    }\n  }, \"Slno\"), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 27\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 27\n    }\n  }, \"PhoneNo\"), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 27\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 27\n    }\n  }, \"DayOfCollection\"), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 27\n    }\n  }, \"PayCount\"), /*#__PURE__*/React.createElement(TableCell, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 27\n    }\n  }, \"Update\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 23\n    }\n  }, clientDtlRows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.slno,\n    sx: alternateRowColor(index) // Apply styles here\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 31\n    }\n  }, index + 1), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 31\n    }\n  }, row.clientName), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 31\n    }\n  }, row.clientPhone), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 31\n    }\n  }, row.Address), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 31\n    }\n  }, row.DayOfCollection), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 31\n    }\n  }, row.CurrentPayCount, \"/\", row.PayCount), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 33\n    }\n  }, \"Update\")))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: clientDtlRows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onPageChange: handleChangePage,\n    onRowsPerPageChange: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      marginTop: \"10px\",\n      justifyContent: \"flex-end\" // Align the button to the right\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => setOpenClientUpdateDialogue(true),\n    sx: {\n      backgroundColor: \"#285430\",\n      \"&:hover\": {\n        backgroundColor: \"#224B0C\"\n      },\n      marginRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, \"Add User\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\"\n    // onClick={() => setAddCenterDialogue(true)}\n    ,\n    sx: {\n      backgroundColor: \"#285430\",\n      \"&:hover\": {\n        backgroundColor: \"#224B0C\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, \"Know More\"))))))), /*#__PURE__*/React.createElement(\"section\", {\n    mt: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: openClientUpdateDialogue,\n    onClose: () => setOpenClientUpdateDialogue(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, \"Update Loan Details\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }, \"Update Loan details:\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"16px\",\n      minWidth: \"100px\",\n      width: \"500px\",\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    label: \"Client Name\",\n    value: dialogueClientName,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    label: \"Client Phone No\",\n    value: dialogueClientPhone,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    label: \"Amount To be paid\",\n    value: dialogueClientPhone,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    label: \"Amount Paid\",\n    value: dialogueClientPhone,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }\n  })))))));\n};\nexport default SalesExecutiveDashboardPage;","map":{"version":3,"names":["React","useEffect","useState","SalesExecNavbar","Box","Grid","Select","axios","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Radio","RadioGroup","FormControlLabel","TablePagination","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","TextField","Card","CardActionArea","CardContent","CardHeader","ListItem","List","ListItemText","Avatar","ListItemAvatar","AccountCircleIcon","SalesExecutiveDashboardPage","salesExecId","localStorage","getItem","clientDtlRows","setClientDtlRows","page","setPage","rowsPerPage","setRowsPerPage","alternateRowColor","index","backgroundColor","textColor","color","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","openClientUpdateDialogue","setOpenClientUpdateDialogue","dialogueClientName","setDialogueContentName","dialogueClientPhone","setDialogueContentPhone","selectedCenter","setSelectedCenter","label","selectedCenterId","setSelectedCenterId","listOfCenters","setListOfCenters","CenterOptions","map","center","id","centerName","centerCode","IFSC","Incharge","centerIncharge","fetchCenterRows","response","get","data","centers","error","console","log","handleCenterSelect","selectedOption","fetchClientLoanDtls","url","entries","clientDetailsPromises","entry","clientDetails","fetchClientDetails","CustomerID","clientName","clientPhone","clientAddress","updatedEntries","Promise","all","clientId","row","clientPersonal","CustomerName","MobileNo1","Address","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","mt","sx","width","minHeight","padding","container","spacing","alignItems","item","xs","sm","height","display","justifyContent","borderRadius","styles","control","baseStyles","zIndex","provided","onChange","options","placeholder","marginTop","variant","flexDirection","component","style","slice","key","slno","DayOfCollection","CurrentPayCount","PayCount","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","onClick","marginRight","open","onClose","gap","minWidth","disabled","fullWidth"],"sources":["/app/lender/client/LenderAppFrontend/src/Pages/SalesExecutiveDashboardPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SalesExecNavbar from \"../Components/SalesExecNavbar\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  TablePagination,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  TextField,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardHeader,\n  ListItem,\n  List,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\n\nconst SalesExecutiveDashboardPage = () => {\n  const salesExecId = localStorage.getItem(\"SalesExecId\");\n\n  const [clientDtlRows, setClientDtlRows] = useState([]);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const alternateRowColor = (index) => {\n    const backgroundColor = index % 2 === 0 ? \"grey.300\" : \"#f2f2f2\"; // Black and grayish colors\n    const textColor = index % 2 === 0 ? \"white\" : \"black\"; // White and black text colors\n    return { backgroundColor, color: textColor };\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  //for UpdateClientDialogue\n  const [openClientUpdateDialogue, setOpenClientUpdateDialogue] =\n    useState(false);\n  const [dialogueClientName, setDialogueContentName] = useState(\"\");\n  const [dialogueClientPhone, setDialogueContentPhone] = useState(\"\");\n\n  //for center selection\n  const [selectedCenter, setSelectedCenter] = useState({\n    value: \"all\",\n    label: \"All\",\n  });\n  const [selectedCenterId, setSelectedCenterId] = useState(\"all\");\n\n  const [listOfCenters, setListOfCenters] = useState([]);\n  const CenterOptions = [\n    { value: \"all\", label: \"All\" }, // Add this line for the \"All\" option\n    ...listOfCenters.map((center) => ({\n      value: center.id,\n      label: center.centerName,\n      centerCode: center.centerCode,\n      IFSC: center.IFSC,\n      Incharge: center.centerIncharge,\n    })),\n  ];\n\n  //to fetch CenterDtls\n  const fetchCenterRows = async () => {\n    try {\n      const response = await axios.get(\"/api/v1/center/getAllCenterDetails\");\n\n      setListOfCenters(response.data.centers);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCenterSelect = (selectedOption) => {\n    setSelectedCenter(selectedOption);\n    setSelectedCenterId(selectedOption.value);\n    fetchClientLoanDtls(salesExecId, selectedOption.value);\n  };\n\n  //fetched clientLoanDetails then pass to CLientDtls func to get client's name\n  const fetchClientLoanDtls = async (salesExecId, selectedCenterId) => {\n    try {\n      let url;\n      if (selectedCenterId === \"all\") {\n        // If the selectedCenterId is \"all\", fetch all entries without specifying a CenterID\n        url = `/api/v1/MoneyRecord/getAllcashFlow?SalesExecID=${salesExecId}`;\n      } else {\n        // If a specific center is selected, fetch entries with the specified CenterID\n        url = `/api/v1/MoneyRecord/getAllcashFlow?SalesExecID=${salesExecId}&CenterID=${selectedCenterId}`;\n      }\n\n      const response = await axios.get(url);\n\n      const entries = response.data.entries;\n      console.log(entries);\n\n      const clientDetailsPromises = entries.map(async (entry) => {\n        const clientDetails = await fetchClientDetails(entry.CustomerID, entry);\n        return {\n          ...entry,\n          clientName: clientDetails.clientName,\n          clientPhone: clientDetails.clientPhone,\n          clientAddress: clientDetails.clientAddress,\n        };\n      });\n      const updatedEntries = await Promise.all(clientDetailsPromises);\n\n      setClientDtlRows(updatedEntries);\n      console.log(\"update:\", updatedEntries);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchClientDetails = async (clientId, row) => {\n    try {\n      const response = await axios.get(\n        `/api/v1/client/getClientPersonalDetailsById/${clientId}`\n      );\n      const clientName = response.data.clientPersonal.CustomerName;\n      const clientPhone = response.data.clientPersonal.MobileNo1;\n      const clientAddress = response.data.clientPersonal.Address;\n\n      return { ...row, clientName, clientPhone, clientAddress };\n    } catch (error) {\n      console.log(error);\n      return row; // Return the original row in case of an error\n    }\n  };\n\n  useEffect(() => {\n    fetchCenterRows();\n    fetchClientLoanDtls(salesExecId, selectedCenterId); // Add this line\n  }, []);\n\n  return (\n    <>\n      <SalesExecNavbar />\n      <Box mt={10}>\n        <section>\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              width: \"100%\",\n              minHeight: \"40vh\",\n              padding: \"20px\", // Adding padding to create space around the cards\n            }}\n          >\n            <Grid container spacing={2} alignItems=\"stretch\">\n              {/* Center Selection Section  */}\n              <Grid item xs={12} sm={3}>\n                <Box\n                  sx={{\n                    height: \"100px\",\n                    backgroundColor: \"#A4BE7B\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    padding: \"20px\", // Padding for the inner Box\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Select\n                    styles={{\n                      control: (baseStyles) => ({\n                        ...baseStyles,\n                        width: \"250px\",\n                        height: \"50px\",\n                        zIndex: \"0\",\n                      }),\n                      provided: (baseStyles) => ({\n                        ...baseStyles,\n                        zIndex: \"9999 !important\",\n                      }),\n                    }}\n                    value={selectedCenter} // Ensure 'value' is being set correctly\n                    onChange={handleCenterSelect}\n                    options={CenterOptions}\n                    placeholder=\"Select Center\"\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"10px\",\n                    height: \"300px\",\n                    backgroundColor: \"#A4BE7B\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    borderRadius: \"10px\",\n                    padding: \"20px\",\n                  }}\n                >\n                  <Card sx={{ height: \"100%\", width: \"100%\", padding: \"10px\" }}>\n                    <Typography variant=\"h6\">Center Details</Typography>\n                    <CardContent>\n                      {selectedCenter && (\n                        <div>\n                          <Typography variant=\"subheading\">\n                            Center Name: {selectedCenter.label}\n                          </Typography>\n                          <br />\n                          <Typography variant=\"subheading\">\n                            Center Code: {selectedCenter.centerCode}\n                          </Typography>\n                          <br />\n                          <Typography variant=\"subheading\">\n                            IFSC: {selectedCenter.IFSC}\n                          </Typography>\n                          <br />\n                          <Typography variant=\"subheading\">\n                            Incharge: {selectedCenter.Incharge}\n                          </Typography>\n                          <br />\n                          {/* Add additional details as needed */}\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                </Box>\n              </Grid>\n\n              {/* Clients table section  */}\n              <Grid item xs={12} sm={9}>\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    backgroundColor: \"#5F8D4E\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\", // Stack items vertically\n                    alignItems: \"flex-end\", // Align items to the right\n                    padding: \"20px\", // Padding for the inner Box\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <TableContainer component={Paper}>\n                    <Table>\n                      <TableHead>\n                        <TableRow\n                          sx={{ backgroundColor: \"black\", color: \"white\" }}\n                        >\n                          <TableCell style={{ color: \"white\" }}>Slno</TableCell>\n                          <TableCell style={{ color: \"white\" }}>Name</TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            PhoneNo\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            Address\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            DayOfCollection\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            PayCount\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            Update\n                          </TableCell>\n                        </TableRow>\n                      </TableHead>\n\n                      <TableBody>\n                        {clientDtlRows\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n                          .map((row, index) => (\n                            <TableRow\n                              key={row.slno}\n                              sx={alternateRowColor(index)} // Apply styles here\n                            >\n                              <TableCell>{index + 1}</TableCell>\n                              <TableCell>{row.clientName}</TableCell>\n                              <TableCell>{row.clientPhone}</TableCell>\n                              <TableCell>{row.Address}</TableCell>\n                              <TableCell>{row.DayOfCollection}</TableCell>\n                              <TableCell>\n                                {row.CurrentPayCount}/{row.PayCount}\n                              </TableCell>\n\n                              <TableCell>\n                                <Button variant=\"outlined\">Update</Button>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                      </TableBody>\n                    </Table>\n                    <TablePagination\n                      rowsPerPageOptions={[5, 10, 25]}\n                      component=\"div\"\n                      count={clientDtlRows.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                  </TableContainer>\n                  {/* Add user Button */}\n                  <Box\n                    sx={{\n                      marginTop: \"10px\",\n                      justifyContent: \"flex-end\", // Align the button to the right\n                    }}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => setOpenClientUpdateDialogue(true)}\n                      sx={{\n                        backgroundColor: \"#285430\",\n                        \"&:hover\": {\n                          backgroundColor: \"#224B0C\",\n                        },\n                        marginRight: \"5px\",\n                      }}\n                    >\n                      Add User\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      // onClick={() => setAddCenterDialogue(true)}\n                      sx={{\n                        backgroundColor: \"#285430\",\n                        \"&:hover\": {\n                          backgroundColor: \"#224B0C\",\n                        },\n                      }}\n                    >\n                      Know More\n                    </Button>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </section>\n        <section mt={10}></section>\n\n        <Box>\n          <Dialog\n            open={openClientUpdateDialogue}\n            onClose={() => setOpenClientUpdateDialogue(false)}\n          >\n            <DialogTitle>Update Loan Details</DialogTitle>\n            <DialogContent>\n              <DialogContentText>Update Loan details:</DialogContentText>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"16px\",\n                  minWidth: \"100px\",\n                  width: \"500px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <TextField\n                  disabled\n                  label=\"Client Name\"\n                  value={dialogueClientName}\n                  fullWidth\n                />\n                <TextField\n                  disabled\n                  label=\"Client Phone No\"\n                  value={dialogueClientPhone}\n                  fullWidth\n                />\n                <TextField\n                  disabled\n                  label=\"Amount To be paid\"\n                  value={dialogueClientPhone}\n                  fullWidth\n                />\n                <TextField\n                  disabled\n                  label=\"Amount Paid\"\n                  value={dialogueClientPhone}\n                  fullWidth\n                />\n              </Box>\n            </DialogContent>\n          </Dialog>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default SalesExecutiveDashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}