{"version":3,"sources":["logo.svg","Pages/LoginPage.jsx","Components/AdminNavbar.jsx","Components/SalesExeTableComponent.jsx","Pages/AdminDashboardPage.jsx","Components/SalesExecNavbar.jsx","AddClientSections/ClientPersonalInfo.jsx","AddClientSections/ClientFamilyDetails.jsx","AddClientSections/ClientGuarantorDetails.jsx","AddClientSections/ClientBankDtls.jsx","AddClientSections/ClinetOtherExpDtls.jsx","AddClientSections/ClientVerificationDtls.jsx","Pages/AddCustomerPage.jsx","Pages/CenterReportPage.jsx","Pages/AddSalesExecutivePage.jsx","Pages/SalesExecutiveDashboardPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","LoginPage","phoneNumber","setPhoneNumber","useState","password","setPassword","showSuccess","setShowSuccess","showError","setShowError","access","setAccess","useEffect","localStorage","clear","React","createElement","Box","sx","height","backgroundColor","display","justifyContent","alignItems","Paper","elevation","padding","flexDirection","maxWidth","width","src","alt","style","objectFit","Typography","variant","marginBottom","TextField","label","margin","fullWidth","InputProps","borderColor","value","onChange","e","target","type","Button","color","marginTop","&:hover","onClick","async","response","axios","post","token","role","SalesExecId","data","setItem","error","Link","to","textDecoration","Alert","severity","AlertTitle","navItems","name","link","AdminNavbar","_ref","window","mobileOpen","setMobileOpen","navigate","useNavigate","handleDrawerToggle","prevState","handleDrawerItem","item","drawer","xs","sm","map","key","container","undefined","document","body","CssBaseline","AppBar","component","Toolbar","IconButton","aria-label","edge","mr","MenuIcon","flexGrow","Drawer","open","onClose","ModalProps","keepMounted","& .MuiDrawer-paper","boxSizing","columns","id","minWidth","align","SalesExeTableComponent","fetchedRows","setFetchedRows","page","setPage","rowsPerPage","setRowsPerPage","alternateRowColor","index","get","status","Error","employees","count","console","log","message","fetchData","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","column","TableCell","background","TableBody","slice","row","hover","tabIndex","Fragment","Name","AmountLended","format","TablePagination","rowsPerPageOptions","length","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","AdminDashboard","className","minHeight","Grid","spacing","md","borderRadius","Card","CardContent","textAlign","CurrencyRupeeIcon","fontSize","PieChart","Pie","dataKey","cx","cy","innerRadius","outerRadius","fill","fontWeight","mb","SalesExecNavbar","ClientPersonalInfo","activeStep","centerName","setCenterName","customerId","setCustomerId","customerName","setCustomerName","spouseName","setSpouseName","fatherName","setFatherName","motherName","setMotherName","dateOfBirth","setDateOfBirth","age","setAge","isTatchedHouse","setIsTatchedHouse","isRoofTiles","setIsRoofTiles","isMetalsheetsRoof","setIsMetalsheetsRoof","isCementSheetsRoof","setIsCementSheetsRoof","isCementConcreteCeil","setIsCementConcreteCeil","isHindu","setIsHindu","isMuslim","setIsMuslim","isChristian","setIsChristian","isOthers","setIsOthers","isMarried","setIsMarried","isSingle","setIsSingle","isWidow","setIsWidow","isDivorced","setIsDivorced","isSeparate","setIsSeparate","address","setAddress","isOwned","setIsOwned","isRented","setIsRented","residenceCustYr","setResidenceCustYr","mobileNo1","setMobileNo1","mobileNo2","setMobileNo2","SalesExecID","setSalesExecID","isSaved","setIsSaved","isExists","setIsExists","dataExists","setDataExists","showAlert","setShowAlert","alertMessage","setAlertMessage","successMessage","setSuccessMessage","selectedCenter","setSelectedCenter","listOfCenters","setListOfCenters","CenterOptions","center","Array","isArray","centers","fetchListOfCenters","getItem","concat","clientPersonal","selectedCenterOption","find","option","centerId","CustomerId","CustomerName","SpouseName","FatherName","MotherName","DateOfBirth","Age","Boolean","isMetalsheets","Address","ResidenceCustYr","MobileNo1","MobileNo2","setFormData","border","Select","styles","control","baseStyles","zIndex","provided","selectedOption","options","placeholder","marginRight","InputLabelProps","shrink","FormControlLabel","Checkbox","checked","multiline","rows","clientPersonalData","patch","familyDtls","clientId","initialiseFamilyDtls","ClientFamilyDetails","member1","setMember1","relation1","setRelation1","age1","setAge1","occupation1","setOccupation1","education1","setEducation1","income1","setIncome1","member2","setMember2","relation2","setRelation2","age2","setAge2","occupation2","setOccupation2","education2","setEducation2","income2","setIncome2","member3","setMember3","relation3","setRelation3","age3","setAge3","occupation3","setOccupation3","education3","setEducation3","income3","setIncome3","member4","setMember4","relation4","setRelation4","age4","setAge4","occupation4","setOccupation4","education4","setEducation4","income4","setIncome4","member5","setMember5","relation5","setRelation5","age5","setAge5","occupation5","setOccupation5","education5","setEducation5","income5","setIncome5","familyId","flag","result","clientFamilyData","bankDetails","clientID","initialiseBankDtls","ClientGuarantorDetails","guarantorName","setGuarantorName","grSpouseName","setGrSpouseName","grFatherName","setGrFatherName","grMotherName","setGrMotherName","grRelation","setGrRelation","grDateOfBirth","setGrDateOfBirth","grAge","setGrAge","grMobileNo1","setGrMobileNo1","grMobileNo2","setGrMobileNo2","grAddress","setGrAddress","grIsOwned","setGrIsOwned","grIsRented","setGrIsRented","guarantorId","GuarantorName","Relation","GrMobileNo1","GrMobileNo2","GrAddress","GrIsRented","GrIsOwned","clientGuarantorDtls","VerificationDtls","initialiseVerificationDtls","ClientBankDtls","accountNo","setAccountNo","ifsc","setIfsc","branchName","setBranchName","bankName","setBankName","bankId","AccountNo","IFSC","BranchName","BankName","clientBankDtls","houseHoldDetails","initialiseHouseholdDtls","ClinetOtherExpDtls","clLoan","setClLoan","clEducation","setClEducation","clRent","setClRent","clMedical","setClMedical","clOthers","setClOthers","clTotal","setClTotal","clTotalIncome","setClTotalIncome","clTotalExpenses","setClTotalExpenses","clBalance","setClBalance","houseHoldId","clientHouseHold","Loan","Education","Rent","Medical","Others","Total","TotalIncome","TotalExpenses","Balance","clientOtherDtls","GuarantorDtls","initialiseGuarantorDtls","ClientVerificationDtls","clSmartCard","setClSmartCard","clAadharCard","setClAadharCard","clVoterId","setClVoterId","clPanCard","setClPanCard","clOthers1","setClOthers1","clOthers2","setClOthers2","grSmartCard","setGrSmartCard","grAadharCard","setGrAadharCard","grVoterId","setGrVoterId","grPanCard","setGrPanCard","grOthers1","setGrOthers1","grOthers2","setGrOthers2","verificationId","clientVerification","ClSmartCard","ClAadharCard","ClVoterId","ClPanCard","ClOthers1","ClOthers2","GrSmartCard","GrAadharCard","GrVoterId","GrPanCard","GrOthers1","GrOthers2","borderRight","paddingRight","borderLeft","paddingLeft","marginLeft","clientVerificationDtls","steps","AddCustomerPage","setActiveStep","completed","setCompleted","selectedDate","setSelectedDate","members","setMembers","MemberName","Occupation","Income","totalSteps","completedSteps","Object","keys","handleNext","newActiveStep","findIndex","step","i","bgcolor","Stepper","alternativeLabel","Step","StepLabel","pt","disabled","handleBack","prevActiveStep","flex","handleComplete","newCompleted","inverstorPieChartData","clientPieChartData","CenterReportPage","selectedValue","setSelectedValue","selectedSalesExecRow","setSelectedSalesExecRow","salesExecDtlRows","setSalesExecDtlRows","clientDtlRows","setClientDtlRows","salesExecName","setSalesExecName","salesExecContact","setSalesExecContact","salesExecEmail","setSalesExecEmail","salesExecAdd","setSalesExecAdd","salesExecCenter","setSalesExecCenter","centerCode","setCenterCode","centerIncharge","setCenterIncharge","addCenterDialogue","setAddCenterDialogue","addSalesExecDialogue","setAddSalesExecDialogue","knowClientDtlsDialogue","setKnowClientDtlsDialogue","centerDtlRows","setCenterDtlRows","handleKnowClientDtlsDialogueClose","Transition","forwardRef","props","ref","Slide","assign","direction","handleChangeRowsPerPage","parseInt","fetchClientLoanDtls","clientDetailsPromises","salesExecId","entries","clientDetails","fetchClientDetails","entry","CustomerID","clientName","updatedEntries","Promise","all","fetchSalesExecOnCenterSelect","fetchCenterRows","slno","TotalAmount","RadioGroup","handleCenterRadioChange","Radio","series","highlightScope","faded","highlighted","additionalRadius","handleSalesExecRadioChange","Phone","dateOfLoan","LoanAmount","Status","Dialog","DialogTitle","DialogContent","DialogContentText","gap","DialogActions","centerDtls","SalesExecDtls","email","Role","fullScreen","TransitionComponent","position","CloseIcon","ml","DayOfCollection","PrincipalAmount","Interest","PayCount","AddSalesExecutivePage","selectedRowSalesExec","setSelectedRowSalesExec","selectedEmployee","setSelectedEmployee","selectedRowClient","setSelectedRowClient","selectedRowData","setSelectedRowData","isEditMode","setIsEditMode","openDialog","setOpenDialog","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","clientRows","setClientRows","newUserData","setNewUserData","clientPage","setClientPage","clientRowsPerPage","setClientRowsPerPage","clientColumns","handleRowSelectSalesExec","fetchClients","handleRowSelectClient","fetchSalesExec","salesExecID","clients","handleAddUser","Avatar","EmailAddr","payload","employeeId","handleEdit","EditIcon","CutomerID","handleChangeClientPage","handleSaveUser","SalesExecutiveDashboardPage","openClientUpdateDialogue","setOpenClientUpdateDialogue","dialogueClientName","setDialogueContentName","dialogueClientPhone","setDialogueContentPhone","selectedCenterId","setSelectedCenterId","Incharge","url","clientPhone","clientAddress","mt","CurrentPayCount","defaults","baseURL","App","BrowserRouter","Routes","Route","path","element","AdminDashboardPage","ProtectedRouteSalesExec","children","isSalesExecAuthorized","isAdminAuthorized","Navigate","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4a04d56f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport Alert from \"@mui/material/Alert\";\nimport AlertTitle from \"@mui/material/AlertTitle\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginPage = () => {\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [access, setAccess] = useState(\"\");\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(\"/api/v1/employee/login\", {\n        phoneNumber,\n        password,\n      });\n      const { token, role, SalesExecId } = response.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"role\", role);\n      if (role === \"SalesExec\") {\n        localStorage.setItem(\"SalesExec-authorized\", \"true\");\n      } else if (role === \"Admin\") {\n        localStorage.setItem(\"Admin-authorized\", \"true\");\n      }\n      localStorage.setItem(\"SalesExecId\", SalesExecId);\n      setAccess(role);\n      setShowSuccess(true);\n      setShowError(false);\n    } catch (error) {\n      setShowSuccess(false);\n      setShowError(true);\n    }\n  };\n\n  useEffect(() => {\n    localStorage.clear();\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        height: \"100vh\",\n        backgroundColor: \"#A6CF98\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Paper\n        elevation={6}\n        sx={{\n          padding: \"20px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          maxWidth: \"600px\",\n          width: \"100%\",\n        }}\n      >\n        <Box sx={{ display: \"flex\" }}>\n          <Box sx={{ width: \"50%\", height: \"100%\" }}>\n            <img\n              src=\"https://images.unsplash.com/photo-1497250681960-ef046c08a56e?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"\n              alt=\"Login\"\n              style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\n            />\n          </Box>\n          <Box\n            sx={{\n              width: \"50%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              padding: \"40px\",\n            }}\n          >\n            <Typography variant=\"h4\" sx={{ marginBottom: \"20px\" }}>\n              LENDER APP\n            </Typography>\n\n            <TextField\n              label=\"Phone Number\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              InputProps={{\n                style: { borderColor: \"#739072\" },\n              }}\n              value={phoneNumber}\n              onChange={(e) => setPhoneNumber(e.target.value)}\n            />\n\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              InputProps={{\n                style: { borderColor: \"#739072\" },\n              }}\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{\n                marginTop: \"20px\",\n                backgroundColor: \"#557C55\",\n                \"&:hover\": {\n                  backgroundColor: \"#739072\",\n                },\n              }}\n              onClick={handleLogin}\n            >\n              Login\n            </Button>\n          </Box>\n        </Box>\n        {showSuccess && (\n          <Link\n            to={\n              access === \"SalesExec\"\n                ? \"/sales-exec/dashboard\"\n                : \"/admin/dashboard\"\n            }\n            style={{ textDecoration: \"none\" }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{\n                marginTop: \"20px\",\n                backgroundColor: \"#557C55\",\n                \"&:hover\": {\n                  backgroundColor: \"#739072\",\n                },\n              }}\n            >\n              Go to Dashboard\n            </Button>\n          </Link>\n        )}\n\n        {showError && (\n          <Alert severity=\"error\" sx={{ width: \"100%\", marginTop: \"20px\" }}>\n            <AlertTitle>Wrong Credentials</AlertTitle>\n            The provided credentials are incorrect. Please try again.\n          </Alert>\n        )}\n      </Paper>\n    </Box>\n  );\n};\n\nexport default LoginPage;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Divider from \"@mui/material/Divider\";\nimport Drawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nconst drawerWidth = 240;\nconst navItems = [\n  { name: \"Dashboard\", link: \"/admin/dashboard\" },\n  { name: \"Center\", link: \"/admin/center\" },\n  { name: \"Logout\" },\n];\n\nconst AdminNavbar = ({ window }) => {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const navigate = useNavigate(); // Get the navigate function\n\n  const handleDrawerToggle = () => {\n    setMobileOpen((prevState) => !prevState);\n  };\n\n  const handleDrawerItem = (item) => {\n    setMobileOpen(false); // Close the drawer after clicking an item\n\n    if (item === \"Logout\") {\n      // Handle logout by clearing localStorage and navigating to \"/login\"\n      localStorage.clear();\n      navigate(\"/login\"); // Use navigate to go to the \"/login\" route\n    }\n  };\n\n  const drawer = (\n    <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n      {navItems.map((item) => (\n        <React.Fragment key={item.name}>\n          {item.name === \"Logout\" ? (\n            <Button\n              sx={{ color: \"#fff\" }}\n              onClick={() => handleDrawerItem(item.name)}\n            >\n              {item.name}\n            </Button>\n          ) : (\n            <Link\n              to={item.link}\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\n            >\n              <Button\n                sx={{ color: \"#fff\" }}\n                onClick={() => handleDrawerItem(item.name)}\n              >\n                {item.name}\n              </Button>\n            </Link>\n          )}\n        </React.Fragment>\n      ))}\n    </Box>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar component=\"nav\" sx={{ backgroundColor: \"#5F8D4E\" }}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: \"none\" } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\n          >\n            LenderApp\n          </Typography>\n\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n            {navItems.map((item) => (\n              <Button\n                key={item.name}\n                sx={{ color: \"#fff\" }}\n                onClick={() => handleDrawerItem(item.name)}\n              >\n                <Link\n                  to={item.link}\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\n                >\n                  {item.name}\n                </Link>\n              </Button>\n            ))}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <nav>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true,\n          }}\n          sx={{\n            display: { xs: \"block\", sm: \"none\" },\n            \"& .MuiDrawer-paper\": {\n              boxSizing: \"border-box\",\n              width: drawerWidth,\n            },\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </nav>\n    </Box>\n  );\n};\n\nAdminNavbar.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default AdminNavbar;\n","import React, { useEffect, useState } from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport axios from \"axios\";\n\nconst columns = [\n  { id: \"slno\", label: \"Slno.\", minWidth: 100, align: \"center\" },\n  { id: \"name\", label: \"Name\", minWidth: 100, align: \"center\" },\n  {\n    id: \"amountFloated\",\n    label: \"Amount Floated\",\n    minWidth: 100,\n    align: \"center\",\n  },\n];\n\nexport default function SalesExeTableComponent() {\n  const [fetchedRows, setFetchedRows] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const alternateRowColor = (index) => {\n    return index % 2 === 0 ? \"#f2f2f2\" : \"#dddddd\"; // Grayish and blackish colors\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          \"/api/v1/employee/getAllEmployees?Role=SalesExec\"\n        );\n        if (response.status === 200) {\n          const { employees, count } = response.data; // Destructure employees and count from response.data\n          setFetchedRows(employees); // Set the employees array into the fetchedRows state\n          console.log(employees); // Log the employees array\n        } else {\n          throw new Error(\"Failed to fetch data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow style={{ backgroundColor: \"black\" }}>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{\n                    background: \"black\",\n                    minWidth: column.minWidth,\n                    color: \"white\", // Text color\n                  }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {fetchedRows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableRow\n                  hover\n                  role=\"checkbox\"\n                  tabIndex={-1}\n                  key={row.id} // Use a unique identifier for the key\n                  style={{ backgroundColor: alternateRowColor(index) }}\n                >\n                  {columns.map((column) => (\n                    <TableCell key={column.id} align={column.align}>\n                      {column.id === \"slno\" ? (\n                        <>{index + 1}</>\n                      ) : column.id === \"name\" ? (\n                        <>{row.Name}</>\n                      ) : column.id === \"amountFloated\" ? (\n                        <>{row.AmountLended !== null ? row.AmountLended : 0}</> // Show 0 if AmountLended is null\n                      ) : (\n                        <>\n                          {column.format && typeof row[column.id] === \"number\"\n                            ? column.format(row[column.id])\n                            : row[column.id]}\n                        </>\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 15]}\n        component=\"div\"\n        count={fetchedRows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport AdminNavbar from \"../Components/AdminNavbar\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport CurrencyRupeeIcon from \"@mui/icons-material/CurrencyRupee\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { Link } from \"react-router-dom\";\n\nimport SalesExeTableComponent from \"../Components/SalesExeTableComponent\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nconst AdminDashboard = () => {\n  return (\n    <>\n      <AdminNavbar />\n      {/* Header Section */}\n      <section className=\"header\">\n        <Box\n          sx={{\n            marginTop: \"70px\",\n            backgroundColor: \"white\",\n            width: \"100%\",\n            minHeight: \"20px\",\n            padding: \"20px\",\n          }}\n        >\n          <Typography variant=\"h5\">Hi Admin</Typography>\n        </Box>\n      </section>\n\n      {/* Pie Chart Section  */}\n      <section className=\"ChartSection\">\n        <Box>\n          {/* Adjust the marginTop to make sure the content is below the navbar */}\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              width: \"100%\",\n              minHeight: \"40vh\",\n              padding: \"20px\", // Adding padding to create space around the cards\n            }}\n          >\n            <Grid container spacing={2} alignItems=\"stretch\">\n              <Grid item xs={12} md={6}>\n                {/* clients Chart */}\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    backgroundColor: \"#A4BE7B\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    padding: \"20px\", // Padding for the inner Box\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Card variant=\"outlined\" sx={{ width: \"100%\" }}>\n                    <CardContent>\n                      <Typography variant=\"h5\" component=\"div\">\n                        Money Floating with clients:\n                      </Typography>\n                      <Typography\n                        variant=\"h3\"\n                        component=\"div\"\n                        sx={{ textAlign: \"right\" }}\n                      >\n                        <CurrencyRupeeIcon fontSize=\"large\" /> 250,000\n                      </Typography>\n                      <Box\n                        sx={{\n                          marginTop: \"20px\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <PieChart width={200} height={200}>\n                          <Pie\n                            dataKey=\"value\" // Use \"dataKey\" instead of \"valueKey\"\n                            data={data}\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            innerRadius={40} // Define innerRadius\n                            outerRadius={50}\n                            fill=\"#596FB7\"\n                            label\n                          />\n                          <Pie\n                            dataKey=\"value\" // Use \"dataKey\" instead of \"valueKey\"\n                            data={[{ value: 100 }]}\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            innerRadius={0}\n                            outerRadius={40} // Define outerRadius\n                            fill=\"transparent\" // Set the inner circle to transparent\n                          />\n                        </PieChart>\n                      </Box>\n                      <Box sx={{ marginTop: \"20px\", textAlign: \"right\" }}>\n                        <Button\n                          variant=\"contained\"\n                          sx={{\n                            backgroundColor: \"#285430\",\n                            \"&:hover\": {\n                              backgroundColor: \"#224B0C\",\n                            },\n                          }}\n                        >\n                          Explore\n                        </Button>\n                      </Box>\n                      {/* New content ends here */}\n                    </CardContent>\n                  </Card>\n                </Box>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                {/* investors chart  */}\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    backgroundColor: \"#5F8D4E\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    padding: \"20px\", // Padding for the inner Box\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Card variant=\"outlined\" sx={{ width: \"100%\" }}>\n                    <CardContent>\n                      <Typography variant=\"h5\" component=\"div\">\n                        Money from investors:\n                      </Typography>\n                      <Typography\n                        variant=\"h3\"\n                        component=\"div\"\n                        sx={{ textAlign: \"right\" }}\n                      >\n                        <CurrencyRupeeIcon fontSize=\"large\" /> 250,000\n                      </Typography>\n                      <Box\n                        sx={{\n                          marginTop: \"20px\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <PieChart width={200} height={200}>\n                          <Pie\n                            dataKey=\"value\" // Use \"dataKey\" instead of \"valueKey\"\n                            data={data}\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            innerRadius={40} // Define innerRadius\n                            outerRadius={50}\n                            fill=\"#176B87\"\n                            label\n                          />\n                          <Pie\n                            dataKey=\"value\" // Use \"dataKey\" instead of \"valueKey\"\n                            data={[{ value: 100 }]}\n                            cx=\"50%\"\n                            cy=\"50%\"\n                            innerRadius={0}\n                            outerRadius={40} // Define outerRadius\n                            fill=\"transparent\" // Set the inner circle to transparent\n                          />\n                        </PieChart>\n                      </Box>\n                      <Box sx={{ marginTop: \"20px\", textAlign: \"right\" }}>\n                        <Button\n                          variant=\"contained\"\n                          sx={{\n                            backgroundColor: \"#285430\",\n                            \"&:hover\": {\n                              backgroundColor: \"#224B0C\",\n                            },\n                          }}\n                        >\n                          Explore\n                        </Button>\n                      </Box>\n                      {/* New content ends here */}\n                    </CardContent>\n                  </Card>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </section>\n\n      {/* Tables Section  */}\n      <section>\n        <Box sx={{ backgroundColor: \"white\", p: 2 }}>\n          <Grid container spacing={2}>\n            {/* Sales Executives List  */}\n\n            <Grid item xs={12} md={7}>\n              <Box\n                sx={{\n                  backgroundColor: \"#5F8D4E\",\n                  height: \"200px\",\n                  padding: \"20px\",\n                  height: \"550px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <Box>\n                  <Typography variant=\"h5\" fontWeight=\"bold\" mb={\"5px\"}>\n                    Sales Executives\n                  </Typography>\n                </Box>\n                <Box>\n                  <SalesExeTableComponent />\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"20px\", // Adjust spacing as needed\n                  }}\n                >\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    sx={{\n                      mr: \"5px\",\n                      backgroundColor: \"#285430\",\n                      \"&:hover\": {\n                        backgroundColor: \"#224B0C\",\n                      },\n                    }}\n                  >\n                    Add More Sales Exec\n                  </Button>\n                  <Link\n                    to=\"/admin/addsalesexec\"\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      sx={{\n                        backgroundColor: \"#285430\",\n                        \"&:hover\": {\n                          backgroundColor: \"#224B0C\",\n                        },\n                      }}\n                    >\n                      See More\n                    </Button>\n                  </Link>\n                </Box>\n              </Box>\n            </Grid>\n            {/* Transaction Logs  */}\n            <Grid item xs={12} md={5}>\n              <Box\n                sx={{\n                  backgroundColor: \"#A4BE7B\",\n                  height: \"200px\",\n                  padding: \"15px\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                <Box\n                  sx={{\n                    backgroundColor: \"white\",\n                    height: \"100%\",\n                    padding: \"5px\",\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      backgroundColor: \"grey.300\",\n                      padding: \"5px\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    <div>\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                          padding: \"10px\",\n                        }}\n                      >\n                        <Typography variant=\"subheading\">From:</Typography>\n\n                        <Typography variant=\"subheading\">To:</Typography>\n                      </Box>\n                      <br />\n                      <Typography variant=\"subheading\">Amount:</Typography>\n                      <br />\n                      <Typography variant=\"subheading\">Date:</Typography>\n                      <br />\n                      {/* Add additional details as needed */}\n                    </div>\n                  </Box>\n                </Box>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </section>\n    </>\n  );\n};\n\nexport default AdminDashboard;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useNavigate } from \"react-router-dom\"; // Import Link\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Divider from \"@mui/material/Divider\";\nimport Drawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nconst drawerWidth = 240;\nconst navItems = [\n  { name: \"Dashboard\", link: \"/sales-exec/dashboard\" },\n  { name: \"AddUser\", link: \"/sales-exec/addcustomer\" },\n  { name: \"Logout\" },\n];\n\nconst SalesExecNavbar = ({ window }) => {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const navigate = useNavigate(); // Get the navigate function\n\n  const handleDrawerToggle = () => {\n    setMobileOpen((prevState) => !prevState);\n  };\n\n  const handleDrawerItem = (item) => {\n    setMobileOpen(false); // Close the drawer after clicking an item\n\n    if (item === \"Logout\") {\n      // Handle logout by clearing localStorage and navigating to \"/login\"\n      localStorage.clear();\n      navigate(\"/login\"); // Use navigate to go to the \"/login\" route\n    }\n  };\n\n  const drawer = (\n    <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n      {navItems.map((item) => (\n        <Button\n          key={item.name}\n          sx={{ color: \"#fff\" }}\n          onClick={() => handleDrawerItem(item.name)}\n        >\n          {item.name === \"Logout\" ? (\n            <Link\n              to={item.link}\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\n            >\n              {item.name}\n            </Link>\n          ) : (\n            item.name\n          )}\n        </Button>\n      ))}\n    </Box>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box sx={{ display: \"flex\" }}>\n      <CssBaseline />\n      <AppBar component=\"nav\" sx={{ backgroundColor: \"#5F8D4E\" }}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: \"none\" } }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: \"none\", sm: \"block\" } }}\n          >\n            LenderApp\n          </Typography>\n\n          <Box sx={{ display: { xs: \"none\", sm: \"block\" } }}>\n            {navItems.map((item) => (\n              <Button\n                key={item.name}\n                sx={{ color: \"#fff\" }}\n                onClick={() => handleDrawerItem(item.name)}\n              >\n                <Link\n                  to={item.link}\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\n                >\n                  {item.name}\n                </Link>\n              </Button>\n            ))}\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <nav>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true,\n          }}\n          sx={{\n            display: { xs: \"block\", sm: \"none\" },\n            \"& .MuiDrawer-paper\": {\n              boxSizing: \"border-box\",\n              width: drawerWidth,\n            },\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </nav>\n    </Box>\n  );\n};\n\nSalesExecNavbar.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default SalesExecNavbar;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n  Button,\n  Alert,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\nimport { AlignHorizontalLeftSharp } from \"@mui/icons-material\";\n\nconst ClientPersonalInfo = ({ activeStep }) => {\n  const [centerName, setCenterName] = useState(\"\");\n  const [customerId, setCustomerId] = useState(\"\");\n  const [customerName, setCustomerName] = useState(\"\");\n  const [spouseName, setSpouseName] = useState(\"\");\n  const [fatherName, setFatherName] = useState(\"\");\n  const [motherName, setMotherName] = useState(\"\");\n  const [dateOfBirth, setDateOfBirth] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [isTatchedHouse, setIsTatchedHouse] = useState(false);\n  const [isRoofTiles, setIsRoofTiles] = useState(false);\n  const [isMetalsheetsRoof, setIsMetalsheetsRoof] = useState(false);\n  const [isCementSheetsRoof, setIsCementSheetsRoof] = useState(false);\n  const [isCementConcreteCeil, setIsCementConcreteCeil] = useState(false);\n  const [isHindu, setIsHindu] = useState(false);\n  const [isMuslim, setIsMuslim] = useState(false);\n  const [isChristian, setIsChristian] = useState(false);\n  const [isOthers, setIsOthers] = useState(false);\n  const [isMarried, setIsMarried] = useState(false);\n  const [isSingle, setIsSingle] = useState(false);\n  const [isWidow, setIsWidow] = useState(false);\n  const [isDivorced, setIsDivorced] = useState(false);\n  const [isSeparate, setIsSeparate] = useState(false);\n  const [address, setAddress] = useState(\"\");\n  const [isOwned, setIsOwned] = useState(false);\n  const [isRented, setIsRented] = useState(false);\n  const [residenceCustYr, setResidenceCustYr] = useState(\"\");\n  const [mobileNo1, setMobileNo1] = useState(\"\");\n  const [mobileNo2, setMobileNo2] = useState(\"\");\n  const [SalesExecID, setSalesExecID] = useState(\"\");\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExists, setIsExists] = useState(false);\n  const [dataExists, setDataExists] = useState({});\n\n  //for alerts\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  //for center selection\n  const [selectedCenter, setSelectedCenter] = useState(null);\n  const [listOfCenters, setListOfCenters] = useState([]);\n\n  //to fetch list of centers\n  const fetchListOfCenters = async () => {\n    const response = await axios.get(\"/api/v1/center/getAllCenterDetails\");\n    if (Array.isArray(response.data.centers)) {\n      setListOfCenters(response.data.centers);\n    } else {\n      console.error(\"Invalid response data format:\", response.data.centers);\n    }\n  };\n\n  //CenterOptions format\n  const CenterOptions = listOfCenters.map((center) => ({\n    value: center.id,\n    label: center.centerName, // Adjust this based on your data structure\n  }));\n\n  const handleCenterSelect = (selectedOption) => {\n    setSelectedCenter(selectedOption);\n  };\n\n  //To initalise Family Details\n  const initialiseFamilyDtls = async (customerId) => {\n    try {\n      const familyDtls = {\n        clientId: customerId,\n      };\n      const response = await axios.post(\n        \"/api/v1/client/family/createFamilyMember\",\n        familyDtls\n      );\n      localStorage.setItem(\"familyId\", response.data.id);\n      setSuccessMessage(\"Family Details Initialized\");\n      setShowSuccess(true);\n    } catch (error) {\n      console.log(error);\n      setAlertMessage(\n        \"Family Details not initialized. Please contact the developer\"\n      );\n      setShowAlert(true);\n    }\n  };\n\n  //Handle ClientPersonal Save\n  const handleSaveData = async () => {\n    setSalesExecID(localStorage.getItem(\"id\"));\n\n    const clientPersonalData = {\n      centerId: selectedCenter.label,\n      customerName,\n      spouseName,\n      fatherName,\n      motherName,\n      dateOfBirth,\n      age,\n      address,\n      residenceCustYr,\n      mobileNo1,\n      mobileNo2,\n      isTatchedHouse,\n      isRoofTiles,\n      isMetalsheets: isMetalsheetsRoof,\n      isCementSheetsRoof,\n      isCementConcreteCeil,\n      isHindu,\n      isMuslim,\n      isChristian,\n      isOthers,\n      isMarried,\n      isSingle,\n      isWidow,\n      isDivorced,\n      isSeparate,\n      isOwned,\n      isRented,\n      SalesExecID: localStorage.getItem(\"SalesExecId\"), // Corrected assignment\n      // ... add other fields here\n    };\n\n    try {\n      // Perform action to save data here (e.g., send to API, update state, etc.)\n      const flag = await axios.get(\n        `/api/v1/client/getAllClientPersonalDetails?MobileNo1=${clientPersonalData.mobileNo1}`,\n        clientPersonalData\n      );\n\n      if (flag.data.count === 0) {\n        const response = await axios.post(\n          \"/api/v1/client/createClientPersonalDetails\",\n          clientPersonalData\n        );\n\n        setCustomerId(response.data.customerId);\n        const familyDtls = await initialiseFamilyDtls(response.data.customerId);\n        localStorage.setItem(\"CustomerId\", response.data.customerId);\n        localStorage.setItem(\"flag\", 1);\n        setIsSaved(true);\n        setSuccessMessage(\"Client Created Successfully. Proceed Further.\");\n      } else {\n        setAlertMessage(\"Client Already registered with this Phone Number.\");\n        setShowAlert(true);\n      }\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  //Handle ClientPersonal Update\n  const handleUpdateData = async () => {\n    setSalesExecID(localStorage.getItem(\"id\"));\n\n    const clientPersonalData = {\n      centerId: selectedCenter.value,\n      customerName,\n      spouseName,\n      fatherName,\n      motherName,\n      dateOfBirth,\n      age,\n      address,\n      residenceCustYr,\n      mobileNo1,\n      mobileNo2,\n      isTatchedHouse,\n      isRoofTiles,\n      isMetalsheets: isMetalsheetsRoof,\n      isCementSheetsRoof,\n      isCementConcreteCeil,\n      isHindu,\n      isMuslim,\n      isChristian,\n      isOthers,\n      isMarried,\n      isSingle,\n      isWidow,\n      isDivorced,\n      isSeparate,\n      isOwned,\n      isRented,\n      SalesExecID: localStorage.getItem(\"id\"), // Corrected assignment\n      // ... add other fields here\n    };\n    console.log(\"clientPersonalData: \", clientPersonalData);\n\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/updateClientPersonalDetailsById/${customerId}`,\n        clientPersonalData\n      );\n      console.log(response);\n      if (response.status === 200) {\n        setSuccessMessage(\"Data Updated Successfully\");\n        setShowSuccess(true);\n      }\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  //Set Data if available\n  const setFormData = async (customerId) => {\n    try {\n      const response = await axios.get(\n        `/api/v1/client/getClientPersonalDetailsById/${customerId}`\n      );\n\n      const dataExists = response.data.clientPersonal;\n      console.log(dataExists);\n      const selectedCenterOption = CenterOptions.find(\n        (option) => option.value === dataExists.centerId\n      );\n      // console.log(\"yes:\", selectedCenterOption);\n\n      setSelectedCenter(selectedCenterOption);\n      setCustomerId(dataExists.CustomerId || \"\");\n      setCustomerName(dataExists.CustomerName || \"\");\n      setSpouseName(dataExists.SpouseName || \"\");\n      setFatherName(dataExists.FatherName || \"\");\n      setMotherName(dataExists.MotherName || \"\");\n      setDateOfBirth(dataExists.DateOfBirth || \"\");\n      setAge(dataExists.Age || \"\");\n      setIsTatchedHouse(Boolean(dataExists.isTatchedHouse));\n      setIsRoofTiles(Boolean(dataExists.isRoofTiles));\n      setIsMetalsheetsRoof(Boolean(dataExists.isMetalsheets));\n      setIsCementSheetsRoof(Boolean(dataExists.isCementSheetsRoof));\n      setIsCementConcreteCeil(Boolean(dataExists.isCementConcreteCeil));\n      setIsHindu(Boolean(dataExists.isHindu));\n      setIsMuslim(Boolean(dataExists.isMuslim));\n      setIsChristian(Boolean(dataExists.isChristian));\n      setIsOthers(Boolean(dataExists.isOthers));\n      setIsMarried(Boolean(dataExists.isMarried));\n      setIsSingle(Boolean(dataExists.isSingle));\n      setIsWidow(Boolean(dataExists.isWidow));\n      setIsDivorced(Boolean(dataExists.isDivorced));\n      setIsSeparate(Boolean(dataExists.isSeparate));\n      setAddress(dataExists.Address || \"\");\n      setIsOwned(Boolean(dataExists.isOwned));\n      setIsRented(Boolean(dataExists.isRented));\n      setResidenceCustYr(dataExists.ResidenceCustYr || \"\");\n      setMobileNo1(dataExists.MobileNo1 || \"\");\n      setMobileNo2(dataExists.MobileNo2 || \"\");\n      setSalesExecID(dataExists.SalesExecID || \"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchListOfCenters();\n    const customerId = localStorage.getItem(\"CustomerId\");\n    if (customerId) {\n      setIsExists(true);\n      setIsSaved(true);\n      setFormData(customerId);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box p={5} id=\"client-personal-info\">\n        {/* Personal info */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Personal Information\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              borderRadius: \"10px\",\n              marginTop: \"10px\",\n            }}\n          >\n            <Select\n              styles={{\n                control: (baseStyles) => ({\n                  ...baseStyles,\n                  width: \"250px\",\n                  height: \"50px\",\n                  zIndex: \"0\",\n                }),\n                provided: (baseStyles) => ({\n                  ...baseStyles,\n                  zIndex: \"9999 !important\",\n                }),\n              }}\n              value={selectedCenter} // Ensure 'value' is being set correctly\n              onChange={handleCenterSelect}\n              options={CenterOptions}\n              placeholder=\"Select Center\"\n            />\n          </Box>\n          <br />\n          <TextField\n            label=\"Customer Name\"\n            value={customerName}\n            onChange={(e) => setCustomerName(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Spouse Name\"\n            value={spouseName}\n            onChange={(e) => setSpouseName(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\" }}\n          />\n          <br />\n          <TextField\n            label=\"Father Name\"\n            value={fatherName}\n            onChange={(e) => setFatherName(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Mother Name\"\n            value={motherName}\n            onChange={(e) => setMotherName(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"date\"\n            label=\"Date of Birth\"\n            value={dateOfBirth}\n            onChange={(e) => setDateOfBirth(e.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Age\"\n            value={age}\n            onChange={(e) => setAge(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n        </Box>\n        <br />\n        {/* House Status */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            House Status\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isTatchedHouse} // Use the state directly for checked property\n                onChange={(e) => setIsTatchedHouse(e.target.checked)} // Update the state directly with the checked value\n                name=\"isTatchedHouse\"\n              />\n            }\n            label=\"Tatched House\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isRoofTiles} // Use the state directly for checked property\n                onChange={(e) => setIsRoofTiles(e.target.checked)} // Update the state directly with the checked value\n                name=\"isRoofTiles\"\n              />\n            }\n            label=\"Roof Tiled\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isMetalsheetsRoof} // Use the state directly for checked property\n                onChange={(e) => setIsMetalsheetsRoof(e.target.checked)} // Update the state directly with the checked value\n                name=\"isMetalsheetsRoof\"\n              />\n            }\n            label=\"Metal Sheet Roof\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isCementSheetsRoof} // Use the state directly for checked property\n                onChange={(e) => setIsCementSheetsRoof(e.target.checked)} // Update the state directly with the checked value\n                name=\"isCementSheetsRoof\"\n              />\n            }\n            label=\"Cement Sheet Roof\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isCementConcreteCeil} // Use the state directly for checked property\n                onChange={(e) => setIsCementConcreteCeil(e.target.checked)} // Update the state directly with the checked value\n                name=\"isCementConcreteCeil\"\n              />\n            }\n            label=\"Cement Concrete Ceiling\"\n          />\n        </Box>\n        {/* Religion */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Religion\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isHindu} // Use the state directly for checked property\n                onChange={(e) => setIsHindu(e.target.checked)} // Update the state directly with the checked value\n                name=\"isHindu\"\n              />\n            }\n            label=\"Hindu\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isMuslim} // Use the state directly for checked property\n                onChange={(e) => setIsMuslim(e.target.checked)} // Update the state directly with the checked value\n                name=\"isMuslim\"\n              />\n            }\n            label=\"Muslim\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isChristian} // Use the state directly for checked property\n                onChange={(e) => setIsChristian(e.target.checked)} // Update the state directly with the checked value\n                name=\"isChristian\"\n              />\n            }\n            label=\"Muslim\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isOthers} // Use the state directly for checked property\n                onChange={(e) => setIsOthers(e.target.checked)} // Update the state directly with the checked value\n                name=\"isOthers\"\n              />\n            }\n            label=\"Muslim\"\n          />\n        </Box>\n        {/* Martial Status */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Martial Status\n          </Typography>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isMarried} // Use the state directly for checked property\n                onChange={(e) => setIsMarried(e.target.checked)} // Update the state directly with the checked value\n                name=\"isMarried\"\n              />\n            }\n            label=\"Married\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSingle} // Use the state directly for checked property\n                onChange={(e) => setIsSingle(e.target.checked)} // Update the state directly with the checked value\n                name=\"isSingle\"\n              />\n            }\n            label=\"Single\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isWidow} // Use the state directly for checked property\n                onChange={(e) => setIsWidow(e.target.checked)} // Update the state directly with the checked value\n                name=\"isWidow\"\n              />\n            }\n            label=\"Widowed\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isDivorced} // Use the state directly for checked property\n                onChange={(e) => setIsDivorced(e.target.checked)} // Update the state directly with the checked value\n                name=\"isDivorced\"\n              />\n            }\n            label=\"Widowed\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isSeparate} // Use the state directly for checked property\n                onChange={(e) => setIsSeparate(e.target.checked)} // Update the state directly with the checked value\n                name=\"isSeparate\"\n              />\n            }\n            label=\"Separated\"\n          />\n        </Box>\n        {/* Address */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Address\n          </Typography>\n          <TextField\n            label=\"Address\"\n            multiline\n            rows={4} // Adjust the number of rows as needed\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth // Takes the full width of the container\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isOwned} // Use the state directly for checked property\n                onChange={(e) => setIsOwned(e.target.checked)} // Update the state directly with the checked value\n                name=\"isOwned\"\n              />\n            }\n            label=\"Owned\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={isRented} // Use the state directly for checked property\n                onChange={(e) => setIsRented(e.target.checked)} // Update the state directly with the checked value\n                name=\"isRented\"\n              />\n            }\n            label=\"Rented\"\n          />\n          <TextField\n            type=\"number\"\n            label=\"Residence Customer year\"\n            value={residenceCustYr}\n            name=\"residenceCustYr\"\n            onChange={(e) => setResidenceCustYr(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </Box>\n        {/* Mobile Number */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Contact\n          </Typography>\n\n          <TextField\n            type=\"number\"\n            label=\"Mobile Number\"\n            value={mobileNo1}\n            onChange={(e) => setMobileNo1(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Alternate Mobile Number\"\n            value={mobileNo2}\n            onChange={(e) => setMobileNo2(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n        </Box>\n\n        {/* Add more TextField or other input components for each field */}\n        {/* Display completion message or complete step button */}\n      </Box>\n      {showAlert && <Alert severity=\"error\">{alertMessage}</Alert>}\n      {showSuccess && <Alert severity=\"success\">{successMessage}</Alert>}\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          padding: \"5px\",\n        }}\n      >\n        {!isSaved ? (\n          <Button variant=\"outlined\" onClick={handleSaveData}>\n            Save Data\n          </Button>\n        ) : (\n          <Button variant=\"outlined\" onClick={handleUpdateData}>\n            Update Data\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default ClientPersonalInfo;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Checkbox,\n  FormControlLabel,\n  Button,\n  Alert,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport Select from \"react-select\";\n\nconst ClientFamilyDetails = () => {\n  const [member1, setMember1] = useState(\"\");\n  const [relation1, setRelation1] = useState(\"\");\n  const [age1, setAge1] = useState(0);\n  const [occupation1, setOccupation1] = useState(\"\");\n  const [education1, setEducation1] = useState(\"\");\n  const [income1, setIncome1] = useState(0);\n\n  const [member2, setMember2] = useState(\"\");\n  const [relation2, setRelation2] = useState(\"\");\n  const [age2, setAge2] = useState(0);\n  const [occupation2, setOccupation2] = useState(\"\");\n  const [education2, setEducation2] = useState(\"\");\n  const [income2, setIncome2] = useState(0);\n\n  const [member3, setMember3] = useState(\"\");\n  const [relation3, setRelation3] = useState(\"\");\n  const [age3, setAge3] = useState(0);\n  const [occupation3, setOccupation3] = useState(\"\");\n  const [education3, setEducation3] = useState(\"\");\n  const [income3, setIncome3] = useState(0);\n\n  const [member4, setMember4] = useState(\"\");\n  const [relation4, setRelation4] = useState(\"\");\n  const [age4, setAge4] = useState(0);\n  const [occupation4, setOccupation4] = useState(\"\");\n  const [education4, setEducation4] = useState(\"\");\n  const [income4, setIncome4] = useState(0);\n\n  const [member5, setMember5] = useState(\"\");\n  const [relation5, setRelation5] = useState(\"\");\n  const [age5, setAge5] = useState(0);\n  const [occupation5, setOccupation5] = useState(\"\");\n  const [education5, setEducation5] = useState(\"\");\n  const [income5, setIncome5] = useState(0);\n\n  //for alerts\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const familyId = localStorage.getItem(\"familyId\");\n  const customerId = localStorage.getItem(\"CustomerId\");\n  const flag = localStorage.getItem(\"flag\");\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExists, setIsExists] = useState(false);\n\n  //To initalise Bank Details\n  const initialiseBankDtls = async (customerId) => {\n    try {\n      const bankDetails = {\n        clientID: customerId,\n      };\n      const response = await axios.post(\n        \"/api/v1/client/bankdetails/createClientBankDetails\",\n        bankDetails\n      );\n      localStorage.setItem(\"BankDtlsId\", response.data.id);\n      setSuccessMessage(\"Bank Details Initialized\");\n      setShowSuccess(true);\n    } catch (error) {\n      console.log(error);\n      setAlertMessage(\n        \"Bank Details not initialized. Please contact the developer\"\n      );\n      setShowAlert(true);\n    }\n  };\n\n  const handleSaveData = async () => {\n    // Create an object to hold all the data\n    const clientFamilyData = {\n      clientId: customerId,\n      member1: member1,\n      relation1: relation1,\n      age1: age1,\n      occupation1: occupation1,\n      education1: education1,\n      income1: income1,\n      member2: member1,\n      relation2: relation1,\n      age2: age1,\n      occupation2: occupation1,\n      education2: education1,\n      income2: income1,\n      member3: member1,\n      relation3: relation1,\n      age3: age1,\n      occupation3: occupation1,\n      education3: education1,\n      income3: income1,\n      member4: member1,\n      relation4: relation1,\n      age4: age1,\n      occupation4: occupation1,\n      education4: education1,\n      income4: income1,\n      member5: member1,\n      relation5: relation1,\n      age5: age1,\n      occupation5: occupation1,\n      education5: education1,\n      income5: income1,\n    };\n    console.log(clientFamilyData);\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/family/updateFamilyMemberById/${familyId}`,\n        clientFamilyData\n      );\n      console.log(response.data);\n      localStorage.setItem(\"flag\", 2);\n      setIsSaved(true);\n      await initialiseBankDtls(customerId);\n      setSuccessMessage(\n        \"Client Family Details Updated Successfully. Proceed Further.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  const handleUpdateData = async () => {\n    const clientFamilyData = {\n      clientId: customerId,\n      member1: member1,\n      relation1: relation1,\n      age1: age1,\n      occupation1: occupation1,\n      education1: education1,\n      income1: income1,\n      member2: member1,\n      relation2: relation1,\n      age2: age1,\n      occupation2: occupation1,\n      education2: education1,\n      income2: income1,\n      member3: member1,\n      relation3: relation1,\n      age3: age1,\n      occupation3: occupation1,\n      education3: education1,\n      income3: income1,\n      member4: member1,\n      relation4: relation1,\n      age4: age1,\n      occupation4: occupation1,\n      education4: education1,\n      income4: income1,\n      member5: member1,\n      relation5: relation1,\n      age5: age1,\n      occupation5: occupation1,\n      education5: education1,\n      income5: income1,\n    };\n    console.log(clientFamilyData);\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/family/updateFamilyMemberById/${familyId}`,\n        clientFamilyData\n      );\n      console.log(response.data);\n\n      setSuccessMessage(\n        \"Client Family Details Updated Successfully. Proceed Further.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  const setFormData = async (familyId) => {\n    try {\n      const response = await axios.get(\n        `api/v1/client/family/getFamilyMemberById/${familyId}`\n      );\n      const dataExists = response.data.result;\n\n      setMember1(dataExists.member1 || \"\");\n      setRelation1(dataExists.relation1 || \"\");\n      setAge1(dataExists.age1 || 0);\n      setOccupation1(dataExists.occupation1 || \"\");\n      setEducation1(dataExists.education1 || \"\");\n      setIncome1(dataExists.income1 || 0);\n\n      setMember2(dataExists.member2 || \"\");\n      setRelation2(dataExists.relation2 || \"\");\n      setAge2(dataExists.age2 || 0);\n      setOccupation2(dataExists.occupation2 || \"\");\n      setEducation2(dataExists.education2 || \"\");\n      setIncome2(dataExists.income2 || 0);\n\n      setMember3(dataExists.member3 || \"\");\n      setRelation3(dataExists.relation3 || \"\");\n      setAge3(dataExists.age3 || 0);\n      setOccupation3(dataExists.occupation3 || \"\");\n      setEducation3(dataExists.education3 || \"\");\n      setIncome3(dataExists.income3 || 0);\n\n      setMember4(dataExists.member4 || \"\");\n      setRelation4(dataExists.relation4 || \"\");\n      setAge4(dataExists.age4 || 0);\n      setOccupation4(dataExists.occupation4 || \"\");\n      setEducation4(dataExists.education4 || \"\");\n      setIncome4(dataExists.income4 || 0);\n\n      setMember5(dataExists.member5 || \"\");\n      setRelation5(dataExists.relation5 || \"\");\n      setAge5(dataExists.age5 || 0);\n      setOccupation5(dataExists.occupation5 || \"\");\n      setEducation5(dataExists.education5 || \"\");\n      setIncome5(dataExists.income5 || 0);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const familyId = localStorage.getItem(\"familyId\");\n    if (familyId && flag >= 2) {\n      setIsExists(true);\n      setIsSaved(true);\n      setFormData(familyId);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box p={5} id=\"client-personal-info\">\n        {/* Member 1 */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Family Member 1\n          </Typography>\n\n          <TextField\n            label=\" Name\"\n            value={member1}\n            onChange={(e) => setMember1(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Relation with Client\"\n            value={relation1}\n            onChange={(e) => setRelation1(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\" }}\n          />\n          <br />\n          <TextField\n            label=\"Age\"\n            value={age1}\n            onChange={(e) => setAge1(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"100px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Occuption\"\n            value={occupation1}\n            onChange={(e) => setOccupation1(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Education\"\n            value={education1}\n            onChange={(e) => setEducation1(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Income\"\n            value={income1}\n            onChange={(e) => setIncome1(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"150px\", marginRight: \"10px\" }}\n          />\n        </Box>\n        <br />\n        {/* Member 2 */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Family Member 2\n          </Typography>\n\n          <TextField\n            label=\" Name\"\n            value={member2}\n            onChange={(e) => setMember2(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Relation with Client\"\n            value={relation2}\n            onChange={(e) => setRelation2(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\" }}\n          />\n          <br />\n          <TextField\n            label=\"Age\"\n            value={age2}\n            onChange={(e) => setAge2(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"100px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Occuption\"\n            value={occupation2}\n            onChange={(e) => setOccupation2(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Education\"\n            value={education2}\n            onChange={(e) => setEducation2(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Income\"\n            value={income2}\n            onChange={(e) => setIncome2(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"150px\", marginRight: \"10px\" }}\n          />\n        </Box>\n        <br />\n        {/* Member 3 */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Family Member 3\n          </Typography>\n\n          <TextField\n            label=\" Name\"\n            value={member3}\n            onChange={(e) => setMember3(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Relation with Client\"\n            value={relation3}\n            onChange={(e) => setRelation3(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\" }}\n          />\n          <br />\n          <TextField\n            label=\"Age\"\n            value={age3}\n            onChange={(e) => setAge3(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"100px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Occuption\"\n            value={occupation3}\n            onChange={(e) => setOccupation3(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Education\"\n            value={education3}\n            onChange={(e) => setEducation3(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Income\"\n            value={income3}\n            onChange={(e) => setIncome3(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"150px\", marginRight: \"10px\" }}\n          />\n        </Box>\n        <br />\n\n        {/* Member 4 */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Family Member 4\n          </Typography>\n\n          <TextField\n            label=\" Name\"\n            value={member4}\n            onChange={(e) => setMember4(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Relation with Client\"\n            value={relation4}\n            onChange={(e) => setRelation4(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\" }}\n          />\n          <br />\n          <TextField\n            label=\"Age\"\n            value={age4}\n            onChange={(e) => setAge4(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"100px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Occuption\"\n            value={occupation4}\n            onChange={(e) => setOccupation4(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Education\"\n            value={education4}\n            onChange={(e) => setEducation4(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Income\"\n            value={income4}\n            onChange={(e) => setIncome4(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"150px\", marginRight: \"10px\" }}\n          />\n        </Box>\n        <br />\n\n        {/* Member 5 */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Family Member 5\n          </Typography>\n\n          <TextField\n            label=\" Name\"\n            value={member5}\n            onChange={(e) => setMember5(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Relation with Client\"\n            value={relation5}\n            onChange={(e) => setRelation5(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"350px\" }}\n          />\n          <br />\n          <TextField\n            label=\"Age\"\n            value={age5}\n            onChange={(e) => setAge5(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"100px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Occuption\"\n            value={occupation5}\n            onChange={(e) => setOccupation5(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Education\"\n            value={education5}\n            onChange={(e) => setEducation5(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Income\"\n            value={income5}\n            onChange={(e) => setIncome5(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"150px\", marginRight: \"10px\" }}\n          />\n        </Box>\n        <br />\n      </Box>\n      {showAlert && <Alert severity=\"error\">{alertMessage}</Alert>}\n      {showSuccess && <Alert severity=\"success\">{successMessage}</Alert>}\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          padding: \"5px\",\n        }}\n      >\n        {!isSaved ? (\n          <Button variant=\"outlined\" onClick={handleSaveData}>\n            Save Data\n          </Button>\n        ) : (\n          <Button variant=\"outlined\" onClick={handleUpdateData}>\n            Update Data\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default ClientFamilyDetails;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Alert,\n  Button,\n} from \"@mui/material\";\nimport axios from \"axios\";\n\nconst ClientGuarantorDetails = () => {\n  const [guarantorName, setGuarantorName] = useState(\"\");\n  const [grSpouseName, setGrSpouseName] = useState(\"\");\n  const [grFatherName, setGrFatherName] = useState(\"\");\n  const [grMotherName, setGrMotherName] = useState(\"\");\n  const [grRelation, setGrRelation] = useState(\"\");\n  const [grDateOfBirth, setGrDateOfBirth] = useState();\n  const [grAge, setGrAge] = useState();\n  const [grMobileNo1, setGrMobileNo1] = useState(\"\");\n  const [grMobileNo2, setGrMobileNo2] = useState(\"\");\n  const [grAddress, setGrAddress] = useState(\"\");\n  const [grIsOwned, setGrIsOwned] = useState(false);\n  const [grIsRented, setGrIsRented] = useState(false);\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExists, setIsExists] = useState(false);\n  const [dataExists, setDataExists] = useState({});\n\n  //for alerts\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const guarantorId = localStorage.getItem(\"GuarantorId\");\n  const customerId = localStorage.getItem(\"CustomerId\");\n  const flag = localStorage.getItem(\"flag\");\n\n  const initialiseVerificationDtls = async (customerId) => {\n    try {\n      const VerificationDtls = {\n        customerId: customerId,\n      };\n      const response = await axios.post(\n        \"/api/v1/client/verification/createVerification\",\n        VerificationDtls\n      );\n      localStorage.setItem(\"VerificationId\", response.data.id);\n      setSuccessMessage(\"Verification Details Initialized\");\n      setShowSuccess(true);\n    } catch (error) {\n      console.log(error);\n      setAlertMessage(\n        \"Verification Details not initialized.Do not proceed further. Please contact the developer\"\n      );\n      setShowAlert(true);\n    }\n  };\n\n  const handleSaveData = async () => {\n    try {\n      const clientGuarantorDtls = {\n        GuarantorName: guarantorName,\n        SpouseName: grSpouseName,\n        FatherName: grFatherName,\n        MotherName: grMotherName,\n        Relation: grRelation,\n        DateOfBirth: grDateOfBirth,\n        Age: grAge,\n        GrMobileNo1: grMobileNo1,\n        GrMobileNo2: grMobileNo2,\n        GrAddress: grAddress,\n        GrIsOwned: grIsOwned,\n        GrIsRented: grIsRented,\n        customerId: customerId,\n      };\n\n      const response = await axios.patch(\n        `/api/v1/client/guarantor/updateClientGuarantorById/${guarantorId}`,\n        clientGuarantorDtls\n      );\n      localStorage.setItem(\"flag\", 5);\n      initialiseVerificationDtls(customerId);\n      setIsSaved(true);\n\n      setSuccessMessage(\n        \"Client Guarantor Details Updated Successfully. Proceed Further.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(\"Error updating client guarantor details:\", error);\n    }\n  };\n\n  const handleUpdateData = async () => {\n    try {\n      console.log(\"Updating Client House Hold Details...\");\n\n      const clientGuarantorDtls = {\n        GuarantorName: guarantorName,\n        SpouseName: grSpouseName,\n        FatherName: grFatherName,\n        MotherName: grMotherName,\n        Relation: grRelation,\n        DateOfBirth: grDateOfBirth,\n        Age: grAge,\n        GrMobileNo1: grMobileNo1,\n        GrMobileNo2: grMobileNo2,\n        GrAddress: grAddress,\n        GrIsOwned: grIsOwned,\n        GrIsRented: grIsRented,\n        customerId: customerId,\n      };\n\n      console.log(\"Client Guarantor Details:\", clientGuarantorDtls);\n\n      const response = await axios.patch(\n        `/api/v1/client/guarantor/updateClientGuarantorById/${guarantorId}`,\n        clientGuarantorDtls\n      );\n\n      setIsSaved(true);\n      setSuccessMessage(\n        \"Client Guarantor Details Updated Successfully. Proceed Further.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(\"Error updating client guarantor details:\", error);\n    }\n  };\n\n  const setFormData = async (guarantorId) => {\n    try {\n      const response = await axios.get(\n        `api/v1/client/guarantor/getClientGuarantorById/${guarantorId}`\n      );\n      const dataExists = response.data.result;\n\n      setGuarantorName(dataExists.GuarantorName || \"\");\n      setGrSpouseName(dataExists.SpouseName || \"\");\n      setGrFatherName(dataExists.FatherName || \"\");\n      setGrMotherName(dataExists.MotherName || \"\");\n      setGrRelation(dataExists.Relation || \"\");\n      setGrDateOfBirth(dataExists.DateOfBirth || \"\");\n      setGrAge(dataExists.Age || \"\");\n      setGrMobileNo1(dataExists.GrMobileNo1 || \"\");\n      setGrMobileNo2(dataExists.GrMobileNo2 || \"\");\n      setGrAddress(dataExists.GrAddress || \"\");\n      setGrIsRented(dataExists.GrIsRented || \"\");\n      setGrIsOwned(dataExists.GrIsOwned || \"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const guarantorId = localStorage.getItem(\"GuarantorId\");\n    if (guarantorId && flag >= 5) {\n      setIsExists(true);\n      setIsSaved(true);\n      setFormData(guarantorId);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box p={5} id=\"client-guarantor-details\">\n        {/* Guarantor Personal Info */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Personal Information\n          </Typography>\n          {/* ... (Existing code for Personal Information) */}\n          <TextField\n            label=\"Relation with Client\"\n            value={grRelation}\n            onChange={(e) => setGrRelation(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"250px\" }}\n          />\n          <br />\n          <TextField\n            label=\"Guarantor Name\"\n            value={guarantorName}\n            onChange={(e) => setGuarantorName(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"350px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Guarantor's Spouse Name\"\n            value={grSpouseName}\n            onChange={(e) => setGrSpouseName(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"350px\" }}\n          />\n          <br />\n          <TextField\n            label=\"Guarantor's Father Name\"\n            value={grFatherName}\n            onChange={(e) => setGrFatherName(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            label=\"Guarantor's Mother Name\"\n            value={grMotherName}\n            onChange={(e) => setGrMotherName(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"250px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"date\"\n            label=\"Date of Birth\"\n            value={grDateOfBirth}\n            onChange={(e) => setGrDateOfBirth(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Age\"\n            value={grAge}\n            onChange={(e) => setGrAge(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n        </Box>\n        {/* Address */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          {/* ... (Existing code for Address) */}\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Address\n          </Typography>\n          <TextField\n            label=\"Address\"\n            multiline\n            rows={4} // Adjust the number of rows as needed\n            value={grAddress}\n            onChange={(e) => setGrAddress(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth // Takes the full width of the container\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={grIsOwned} // Use the state directly for checked property\n                onChange={(e) => setGrIsOwned(e.target.checked)} // Update the state directly with the checked value\n                name=\"grIsOwned\"\n              />\n            }\n            label=\"Owned\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={grIsRented} // Use the state directly for checked property\n                onChange={(e) => setGrIsRented(e.target.checked)} // Update the state directly with the checked value\n                name=\"isRented\"\n              />\n            }\n            label=\"Rented\"\n          />\n        </Box>\n        {/* Mobile Number */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Contact\n          </Typography>\n\n          <TextField\n            type=\"number\"\n            label=\"Mobile Number\"\n            value={grMobileNo1}\n            onChange={(e) => setGrMobileNo1(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n          <TextField\n            type=\"number\"\n            label=\"Alternate Mobile Number\"\n            value={grMobileNo2}\n            onChange={(e) => setGrMobileNo2(e.target.value)}\n            margin=\"normal\"\n            sx={{ width: \"200px\", marginRight: \"10px\" }}\n          />\n        </Box>\n      </Box>\n      {showAlert && <Alert severity=\"error\">{alertMessage}</Alert>}\n      {showSuccess && <Alert severity=\"success\">{successMessage}</Alert>}\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          padding: \"5px\",\n        }}\n      >\n        {!isSaved ? (\n          <Button variant=\"outlined\" onClick={handleSaveData}>\n            Save Data\n          </Button>\n        ) : (\n          <Button variant=\"outlined\" onClick={handleUpdateData}>\n            Update Data\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default ClientGuarantorDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography, TextField, Button, Alert } from \"@mui/material\";\nimport axios from \"axios\";\n\nconst ClientBankDtls = ({ activeStep }) => {\n  const [accountNo, setAccountNo] = useState(\"\");\n  const [ifsc, setIfsc] = useState(\"\");\n  const [branchName, setBranchName] = useState(\"\");\n  const [bankName, setBankName] = useState(\"\");\n  const [isSaved, setIsSaved] = useState(false);\n\n  //for alerts\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isExists, setIsExists] = useState(false);\n  const [dataExists, setDataExists] = useState({});\n\n  const bankId = localStorage.getItem(\"BankDtlsId\");\n  const customerId = localStorage.getItem(\"CustomerId\");\n  const flag = localStorage.getItem(\"flag\");\n\n  const initialiseHouseholdDtls = async (customerId) => {\n    try {\n      const houseHoldDetails = {\n        customerId: customerId,\n      };\n      const response = await axios.post(\n        \"/api/v1/client/household/createHouseHoldDtls\",\n        houseHoldDetails\n      );\n      localStorage.setItem(\"HouseHoldId\", response.data.id);\n      setSuccessMessage(\"Other Details Initialized\");\n      setShowSuccess(true);\n    } catch (error) {\n      console.log(error);\n      setAlertMessage(\n        \"Other Details not initialized.Do not proceed further. Please contact the developer\"\n      );\n      setShowAlert(true);\n    }\n  };\n\n  const handleSaveData = async () => {\n    // Create an object to hold all the data\n    const clientBankDtls = {\n      AccountNo: accountNo,\n      IFSC: ifsc,\n      BranchName: branchName,\n      BankName: bankName,\n    };\n    console.log(bankId);\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/bankdetails/updateClientBankDetailsById/${bankId}`,\n        clientBankDtls\n      );\n      console.log(response.data);\n      localStorage.setItem(\"flag\", 3);\n      setIsSaved(true);\n      await initialiseHouseholdDtls(customerId);\n      setSuccessMessage(\n        \"Client Bank Details Updated Successfully. Proceed Further.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  const handleUpdateData = async () => {\n    // Create an object to hold all the data\n    const clientBankDtls = {\n      AccountNo: accountNo,\n      IFSC: ifsc,\n      BranchName: branchName,\n      BankName: bankName,\n    };\n    console.log(bankId);\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/bankdetails/updateClientBankDetailsById/${bankId}`,\n        clientBankDtls\n      );\n      console.log(response.data);\n      setSuccessMessage(\n        \"Client Bank Details Updated Successfully. Proceed Further.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  const setFormData = async (bankId) => {\n    try {\n      const response = await axios.get(\n        `/api/v1/client/bankdetails/getClientBankDetailsById/${bankId}`\n      );\n      const dataExists = response.data.result;\n\n      setAccountNo(dataExists.AccountNo || \"\");\n      setIfsc(dataExists.IFSC || \"\");\n      setBranchName(dataExists.BranchName || \"\");\n      setBankName(dataExists.BankName || \"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const bankId = localStorage.getItem(\"BankDtlsId\");\n    if (bankId && flag >= 3) {\n      setIsExists(true);\n      setIsSaved(true);\n      setFormData(bankId);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box p={5} id=\"client-bank-details\">\n        {/* Account Details */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Account Number\n          </Typography>\n          <TextField\n            label=\"Account Number\"\n            value={accountNo}\n            onChange={(e) => setAccountNo(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"250px\" }}\n          />\n        </Box>\n\n        {/* IFSC Details  */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            IFSC\n          </Typography>\n          <TextField\n            label=\"IFSC Details\"\n            value={ifsc}\n            onChange={(e) => setIfsc(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"250px\" }}\n          />\n        </Box>\n\n        {/* Branch Name */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Bank's Branch Name\n          </Typography>\n          <TextField\n            label=\"Branch Name\"\n            value={branchName}\n            onChange={(e) => setBranchName(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"250px\" }}\n          />\n        </Box>\n\n        {/* Bank Name */}\n        <Box\n          sx={{\n            border: \"1px solid #ccc\",\n            p: 2,\n            borderRadius: \"5px\",\n            marginBottom: \"5px\",\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n          >\n            Bank's Name\n          </Typography>\n          <TextField\n            label=\"Bank Name\"\n            value={bankName}\n            onChange={(e) => setBankName(e.target.value)}\n            margin=\"normal\"\n            variant=\"outlined\"\n            sx={{ width: \"250px\" }}\n          />\n        </Box>\n      </Box>\n      {showAlert && <Alert severity=\"error\">{alertMessage}</Alert>}\n      {showSuccess && <Alert severity=\"success\">{successMessage}</Alert>}\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          padding: \"5px\",\n        }}\n      >\n        {console.log(isSaved)}\n        {!isSaved ? (\n          <Button variant=\"outlined\" onClick={handleSaveData}>\n            Save Data\n          </Button>\n        ) : (\n          <Button variant=\"outlined\" onClick={handleUpdateData}>\n            Update Data\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default ClientBankDtls;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography, TextField, Grid, Alert, Button } from \"@mui/material\";\nimport axios from \"axios\";\n\nconst ClinetOtherExpDtls = () => {\n  const [clLoan, setClLoan] = useState();\n  const [clEducation, setClEducation] = useState();\n  const [clRent, setClRent] = useState();\n  const [clMedical, setClMedical] = useState();\n  const [clOthers, setClOthers] = useState();\n  const [clTotal, setClTotal] = useState();\n  const [clTotalIncome, setClTotalIncome] = useState();\n  const [clTotalExpenses, setClTotalExpenses] = useState();\n  const [clBalance, setClBalance] = useState();\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExists, setIsExists] = useState(false);\n  const [dataExists, setDataExists] = useState({});\n\n  //for alerts\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const houseHoldId = localStorage.getItem(\"HouseHoldId\");\n  const customerId = localStorage.getItem(\"CustomerId\");\n  const flag = localStorage.getItem(\"flag\");\n\n  const initialiseGuarantorDtls = async (customerId) => {\n    try {\n      const GuarantorDtls = {\n        customerId: customerId,\n      };\n      const response = await axios.post(\n        \"/api/v1/client/guarantor/createClientGuarantorDetails\",\n        GuarantorDtls\n      );\n      localStorage.setItem(\"GuarantorId\", response.data.guarantorId);\n      setSuccessMessage(\"Guarantor Details Initialized\");\n      setShowSuccess(true);\n    } catch (error) {\n      console.log(error);\n      setAlertMessage(\n        \"Guarantor Details not initialized.Do not proceed further. Please contact the developer\"\n      );\n      setShowAlert(true);\n    }\n  };\n\n  const handleSaveData = async () => {\n    // Create an object to hold all the data\n    const clientOtherDtls = {\n      Loan: clLoan,\n      Education: clEducation,\n      Rent: clRent,\n      Medical: clMedical,\n      Others: clOthers,\n      Total: clTotal,\n      TotalIncome: clTotalIncome,\n      TotalExpenses: clTotalExpenses,\n      Balance: clBalance,\n      customerId: customerId,\n    };\n    console.log(clientOtherDtls);\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/household/updateClientHouseHoldById/${houseHoldId}`,\n        clientOtherDtls\n      );\n      console.log(response.data);\n      localStorage.setItem(\"flag\", 4);\n      setIsSaved(true);\n      await initialiseGuarantorDtls(customerId);\n      setSuccessMessage(\n        \"Client House Hold Details Updated Successfully. Proceed Further.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  const handleUpdateData = async () => {\n    // Create an object to hold all the data\n    const clientOtherDtls = {\n      Loan: clLoan,\n      Education: clEducation,\n      Rent: clRent,\n      Medical: clMedical,\n      Others: clOthers,\n      Total: clTotal,\n      TotalIncome: clTotalIncome,\n      TotalExpenses: clTotalExpenses,\n      Balance: clBalance,\n      customerId: customerId,\n    };\n    console.log(houseHoldId);\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/household/updateClientHouseHoldById/${houseHoldId}`,\n        clientOtherDtls\n      );\n      console.log(response.data);\n      setIsSaved(true);\n      setSuccessMessage(\n        \"Client Bank Details Updated Successfully. Proceed Further.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  const setFormData = async (houseHoldId) => {\n    try {\n      const response = await axios.get(\n        `api/v1/client/household/getHouseHoldDtlsById/${houseHoldId}`\n      );\n      const dataExists = response.data.clientHouseHold;\n\n      setClLoan(dataExists.Loan || \"\");\n      setClEducation(dataExists.Education || \"\");\n      setClRent(dataExists.Rent || \"\");\n      setClMedical(dataExists.Medical || \"\");\n      setClOthers(dataExists.Others || \"\");\n      setClTotal(dataExists.Total || \"\");\n      setClTotalIncome(dataExists.TotalIncome || \"\");\n      setClTotalExpenses(dataExists.TotalExpenses || \"\");\n      setClBalance(dataExists.Balance || \"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const houseHoldId = localStorage.getItem(\"HouseHoldId\");\n    if (houseHoldId && flag >= 4) {\n      setIsExists(true);\n      setIsSaved(true);\n      setFormData(houseHoldId);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box p={5} id=\"client-bank-details\">\n        <Grid container spacing={2}>\n          {/* Left column */}\n          <Grid item xs={6}>\n            <Box\n              sx={{\n                p: 2,\n                borderRadius: \"5px\",\n                marginBottom: \"5px\",\n              }}\n            >\n              {/* Education Amount */}\n              <Box\n                sx={{\n                  border: \"1px solid #ccc\",\n                  p: 2,\n                  borderRadius: \"5px\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n                >\n                  Education Amount\n                </Typography>\n                <TextField\n                  type=\"number\"\n                  label=\"Education Amount\"\n                  value={clEducation}\n                  onChange={(e) => setClEducation(e.target.value)}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  sx={{ width: \"250px\" }}\n                />\n              </Box>\n\n              {/* Rent Amount */}\n              <Box\n                sx={{\n                  border: \"1px solid #ccc\",\n                  p: 2,\n                  borderRadius: \"5px\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n                >\n                  Rent Amount\n                </Typography>\n                <TextField\n                  type=\"number\"\n                  label=\"Rent Amount\"\n                  value={clRent}\n                  onChange={(e) => setClRent(e.target.value)}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  sx={{ width: \"250px\" }}\n                />\n              </Box>\n\n              {/* Total Income*/}\n              <Box\n                sx={{\n                  border: \"1px solid #ccc\",\n                  p: 2,\n                  borderRadius: \"5px\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n                >\n                  Total Income\n                </Typography>\n                <TextField\n                  type=\"number\"\n                  label=\"Total Income\"\n                  value={clTotal}\n                  onChange={(e) => setClTotal(e.target.value)}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  sx={{ width: \"250px\" }}\n                />\n              </Box>\n            </Box>\n          </Grid>\n\n          {/* Right column */}\n          <Grid item xs={6}>\n            <Box\n              sx={{\n                p: 2,\n                borderRadius: \"5px\",\n                marginBottom: \"5px\",\n              }}\n            >\n              {/* Others */}\n              <Box\n                sx={{\n                  border: \"1px solid #ccc\",\n                  p: 2,\n                  borderRadius: \"5px\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n                >\n                  Others\n                </Typography>\n                <TextField\n                  type=\"number\"\n                  label=\"Others\"\n                  value={clOthers}\n                  onChange={(e) => setClOthers(e.target.value)}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  sx={{ width: \"250px\" }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  border: \"1px solid #ccc\",\n                  p: 2,\n                  borderRadius: \"5px\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n                >\n                  Medical Expenses\n                </Typography>\n                <TextField\n                  type=\"number\"\n                  label=\"Medical Expenses\"\n                  value={clMedical}\n                  onChange={(e) => setClMedical(e.target.value)}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  sx={{ width: \"250px\" }}\n                />\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n\n        {/* Calculate Button */}\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            padding: \"5px\",\n          }}\n        >\n          <Button variant=\"outlined\">Calculate</Button>\n        </Box>\n\n        {/* Calculated Amount  */}\n        <Grid container spacing={2}>\n          {/* Left column */}\n          <Grid item xs={6}>\n            <Box\n              sx={{\n                p: 2,\n                borderRadius: \"5px\",\n                marginBottom: \"5px\",\n              }}\n            >\n              {/* Total Amount */}\n              <Box\n                sx={{\n                  border: \"1px solid #ccc\",\n                  p: 2,\n                  borderRadius: \"5px\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n                >\n                  Total Amount\n                </Typography>\n                <TextField\n                  type=\"number\"\n                  label=\"Total Amount\"\n                  value={clTotal}\n                  onChange={(e) => setClTotal(e.target.value)}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  sx={{ width: \"250px\" }}\n                />\n              </Box>\n\n              {/* Total Expenses Amount */}\n              <Box\n                sx={{\n                  border: \"1px solid #ccc\",\n                  p: 2,\n                  borderRadius: \"5px\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n                >\n                  Total Expenses Amount\n                </Typography>\n                <TextField\n                  type=\"number\"\n                  label=\"Total Expenses Amount\"\n                  value={clTotalExpenses}\n                  onChange={(e) => setClTotalExpenses(e.target.value)}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  sx={{ width: \"250px\" }}\n                />\n              </Box>\n            </Box>\n          </Grid>\n\n          {/* Right column */}\n          <Grid item xs={6}>\n            <Box\n              sx={{\n                p: 2,\n                borderRadius: \"5px\",\n                marginBottom: \"5px\",\n              }}\n            >\n              {/* Balance Amount */}\n              <Box\n                sx={{\n                  border: \"1px solid #ccc\",\n                  p: 2,\n                  borderRadius: \"5px\",\n                  marginBottom: \"5px\",\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={{ marginBottom: 1, fontWeight: \"bold\" }}\n                >\n                  Balance Amount\n                </Typography>\n                <TextField\n                  type=\"number\"\n                  label=\"Balance Amount\"\n                  value={clBalance}\n                  onChange={(e) => setClBalance(e.target.value)}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  sx={{ width: \"250px\" }}\n                />\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n      {showAlert && <Alert severity=\"error\">{alertMessage}</Alert>}\n      {showSuccess && <Alert severity=\"success\">{successMessage}</Alert>}\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          padding: \"5px\",\n        }}\n      >\n        {!isSaved ? (\n          <Button variant=\"outlined\" onClick={handleSaveData}>\n            Save Data\n          </Button>\n        ) : (\n          <Button variant=\"outlined\" onClick={handleUpdateData}>\n            Update Data\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default ClinetOtherExpDtls;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography, TextField, Grid, Alert, Button } from \"@mui/material\";\nimport axios from \"axios\";\n\nconst ClientVerificationDtls = () => {\n  const [clSmartCard, setClSmartCard] = useState(\"\");\n  const [clAadharCard, setClAadharCard] = useState(\"\");\n  const [clVoterId, setClVoterId] = useState(\"\");\n  const [clPanCard, setClPanCard] = useState(\"\");\n  const [clOthers1, setClOthers1] = useState(\"\");\n  const [clOthers2, setClOthers2] = useState(\"\");\n  const [grSmartCard, setGrSmartCard] = useState(\"\");\n  const [grAadharCard, setGrAadharCard] = useState(\"\");\n  const [grVoterId, setGrVoterId] = useState(\"\");\n  const [grPanCard, setGrPanCard] = useState(\"\");\n  const [grOthers1, setGrOthers1] = useState(\"\");\n  const [grOthers2, setGrOthers2] = useState(\"\");\n  const [isSaved, setIsSaved] = useState(false);\n  const [isExists, setIsExists] = useState(false);\n  const [dataExists, setDataExists] = useState({});\n\n  //for alerts\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const verificationId = localStorage.getItem(\"VerificationId\");\n  const customerId = localStorage.getItem(\"CustomerId\");\n  const flag = localStorage.getItem(\"flag\");\n\n  const handleSaveData = async () => {\n    // Create an object to hold all the data\n    const clientVerificationDtls = {\n      GrSmartCard: grSmartCard,\n      GrAadharCard: grAadharCard,\n      GrPanCard: grPanCard,\n      GrVoterId: clVoterId,\n      GrOthers1: grOthers1,\n      GrOthers2: grOthers2,\n      ClSmartCard: clSmartCard,\n      ClAadharCard: clAadharCard,\n      ClVoterId: clVoterId,\n      ClPanCard: clPanCard,\n      ClOthers1: clOthers1,\n      ClOthers2: clOthers2,\n      customerId: customerId,\n    };\n\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/verification/updateVerification/${verificationId}`,\n        clientVerificationDtls\n      );\n      localStorage.setItem(\"flag\", 6);\n      setIsSaved(true);\n      setSuccessMessage(\n        \"Client Verification Details Updated Successfully. All Details Saved Successfully.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  const handleUpdateData = async () => {\n    // Create an object to hold all the data\n    const clientVerificationDtls = {\n      GrSmartCard: grSmartCard,\n      GrAadharCard: grAadharCard,\n      GrPanCard: grPanCard,\n      GrVoterId: clVoterId,\n      GrOthers1: grOthers1,\n      GrOthers2: grOthers2,\n      ClSmartCard: clSmartCard,\n      ClAadharCard: clAadharCard,\n      ClVoterId: clVoterId,\n      ClPanCard: clPanCard,\n      ClOthers1: clOthers1,\n      ClOthers2: clOthers2,\n      customerId: customerId,\n    };\n\n    try {\n      const response = await axios.patch(\n        `/api/v1/client/household/updateClientHouseHoldById/${verificationId}`,\n        clientVerificationDtls\n      );\n      setIsSaved(true);\n      setSuccessMessage(\n        \"Client Verification Details Updated Successfully. Client Data Received.\"\n      );\n      setShowSuccess(true);\n    } catch (error) {\n      console.error(error.response.data);\n    }\n  };\n\n  const setFormData = async (verificationId) => {\n    try {\n      const response = await axios.get(\n        `api/v1/client/verification/getVerificationById/${verificationId}`\n      );\n      const dataExists = response.data.clientVerification;\n\n      setClSmartCard(dataExists.ClSmartCard || \"\");\n      setClAadharCard(dataExists.ClAadharCard || \"\");\n      setClVoterId(dataExists.ClVoterId || \"\");\n      setClPanCard(dataExists.ClPanCard || \"\");\n      setClOthers1(dataExists.ClOthers1 || \"\");\n      setClOthers2(dataExists.ClOthers2 || \"\");\n      setGrSmartCard(dataExists.GrSmartCard || \"\");\n      setGrAadharCard(dataExists.GrAadharCard || \"\");\n      setGrVoterId(dataExists.GrVoterId || \"\");\n      setGrPanCard(dataExists.GrPanCard || \"\");\n      setGrOthers1(dataExists.GrOthers1 || \"\");\n      setGrOthers2(dataExists.GrOthers2 || \"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const verificationId = localStorage.getItem(\"VerificationId\");\n    if (verificationId && flag >= 6) {\n      setIsExists(true);\n      setIsSaved(true);\n      setFormData(verificationId);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box\n        p={5}\n        id=\"client-id-details\"\n        sx={{\n          border: \"1px solid #ccc\",\n          borderRadius: \"5px\",\n          marginBottom: \"10px\",\n        }}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Box\n              sx={{\n                borderRight: \"1px solid #ccc\",\n                paddingRight: \"10px\",\n                marginRight: \"10px\",\n              }}\n            >\n              <Typography\n                variant=\"body2\"\n                sx={{ fontWeight: \"bold\", marginBottom: \"10px\" }}\n              >\n                Client Details\n              </Typography>\n              <TextField\n                label=\"Aadhar Card No\"\n                value={clAadharCard}\n                onChange={(e) => setClAadharCard(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              <TextField\n                label=\"Voter ID No\"\n                value={clVoterId}\n                onChange={(e) => setClVoterId(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              <TextField\n                label=\"PAN Card No\"\n                value={clPanCard}\n                onChange={(e) => setClPanCard(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              <TextField\n                label=\"Other 1\"\n                value={clOthers1}\n                onChange={(e) => setClOthers1(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              <TextField\n                label=\"Other 2\"\n                value={clOthers2}\n                onChange={(e) => setClOthers2(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              {/* Other fields */}\n            </Box>\n          </Grid>\n          <Grid item xs={6}>\n            <Box\n              sx={{\n                borderLeft: \"1px solid #ccc\",\n                paddingLeft: \"10px\",\n                marginLeft: \"10px\",\n              }}\n            >\n              <Typography\n                variant=\"body2\"\n                sx={{ fontWeight: \"bold\", marginBottom: \"10px\" }}\n              >\n                Guarantor Details\n              </Typography>\n              <TextField\n                label=\"Aadhar Card No\"\n                value={grAadharCard}\n                onChange={(e) => setGrAadharCard(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              <TextField\n                label=\"Voter ID No\"\n                value={grVoterId}\n                onChange={(e) => setGrVoterId(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              <TextField\n                label=\"PAN Card No\"\n                value={grPanCard}\n                onChange={(e) => setGrPanCard(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              <TextField\n                label=\"Other 1\"\n                value={grOthers1}\n                onChange={(e) => setGrOthers1(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              <TextField\n                label=\"Other 2\"\n                value={grOthers2}\n                onChange={(e) => setGrOthers2(e.target.value)}\n                margin=\"normal\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: \"10px\" }}\n              />\n              {/* Other fields */}\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n      {showAlert && <Alert severity=\"error\">{alertMessage}</Alert>}\n      {showSuccess && <Alert severity=\"success\">{successMessage}</Alert>}\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          padding: \"5px\",\n        }}\n      >\n        {!isSaved ? (\n          <Button variant=\"outlined\" onClick={handleSaveData}>\n            Save Data\n          </Button>\n        ) : (\n          <Button variant=\"outlined\" onClick={handleUpdateData}>\n            Update Data\n          </Button>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default ClientVerificationDtls;\n","import React, { useState } from \"react\";\nimport SalesExecNavbar from \"../Components/SalesExecNavbar\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\n\nimport ClientPersonalInfo from \"../AddClientSections/ClientPersonalInfo\";\nimport ClientFamilyDetails from \"../AddClientSections/ClientFamilyDetails\";\nimport ClientGuarantorDetails from \"../AddClientSections/ClientGuarantorDetails\";\nimport ClientBankDtls from \"../AddClientSections/ClientBankDtls\";\nimport ClinetOtherExpDtls from \"../AddClientSections/ClinetOtherExpDtls\";\nimport ClientVerificationDtls from \"../AddClientSections/ClientVerificationDtls\";\n\nconst steps = [\n  \"Client Personal Information\",\n  \"Client Family Details\",\n  \"Client Bank Details\",\n  \"Client Household Expenses Details\",\n  \"Client Guarantor Details\",\n  \"Identity Details\",\n];\n\nconst AddCustomerPage = () => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [completed, setCompleted] = useState({});\n  const [selectedDate, setSelectedDate] = React.useState(null);\n\n  const [members, setMembers] = useState([\n    {\n      MemberName: \"\",\n      Relation: \"\",\n      Age: \"\",\n      Occupation: \"\",\n      Education: \"\",\n      Income: \"\",\n    },\n  ]);\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? steps.findIndex((step, i) => !(i in completed))\n        : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: \"#86A789\",\n        height: \"100%\",\n        marginTop: \"65px\",\n        padding: \"20px\",\n      }}\n    >\n      <SalesExecNavbar />\n      <Box\n        height=\"20%\"\n        bgcolor=\"white\"\n        p={\"20px\"}\n        sx={{ borderRadius: \"10px\" }}\n      >\n        {/* Stepper */}\n        <Box sx={{ width: \"100%\" }}>\n          <Stepper activeStep={activeStep} alternativeLabel>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n        </Box>\n      </Box>\n      <Box\n        height=\"80%\"\n        bgcolor=\"white\"\n        sx={{ display: \"flex-col\", marginTop: \"10px\", borderRadius: \"10px\" }}\n      >\n        <Box>\n          {activeStep === 0 && <ClientPersonalInfo />}\n          {activeStep === 1 && <ClientFamilyDetails />}\n          {activeStep === 2 && <ClientBankDtls />}\n          {activeStep === 3 && <ClinetOtherExpDtls />}\n          {activeStep === 4 && <ClientGuarantorDetails />}\n          {activeStep === 5 && <ClientVerificationDtls />}\n        </Box>\n\n        {/* stepper next level */}\n        <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n          <Button\n            color=\"inherit\"\n            disabled={activeStep === 0}\n            onClick={handleBack}\n            sx={{ mr: 1 }}\n          >\n            Back\n          </Button>\n          <Box sx={{ flex: \"1 1 auto\" }} />\n          <Button onClick={handleNext} sx={{ mr: 1 }}>\n            Next\n          </Button>\n          {activeStep !== steps.length &&\n            (completed[activeStep] ? (\n              <Typography variant=\"caption\" sx={{ display: \"inline-block\" }}>\n                {/* Step {activeStep + 1} already completed */}\n              </Typography>\n            ) : (\n              <Button onClick={handleComplete}>\n                {completedSteps() === totalSteps() - 1\n                  ? \"Finish\"\n                  : \"Complete Step\"}\n              </Button>\n            ))}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AddCustomerPage;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AdminNavbar from \"../Components/AdminNavbar\";\nimport Select from \"react-select\";\nimport {\n  Box,\n  Grid,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  TablePagination,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  TextField,\n} from \"@mui/material\";\nimport { PieChart } from \"@mui/x-charts/PieChart\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Slide from \"@mui/material/Slide\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AppBar from \"@mui/material/AppBar\";\n\nconst inverstorPieChartData = [\n  { id: 0, value: 10, label: \"series A\" },\n  { id: 1, value: 15, label: \"series B\" },\n  { id: 2, value: 20, label: \"series C\" },\n];\nconst clientPieChartData = [\n  { id: 0, value: 10, label: \"series A\" },\n  { id: 1, value: 15, label: \"series B\" },\n  { id: 2, value: 20, label: \"series C\" },\n  { id: 3, value: 20, label: \"series C\" },\n  { id: 4, value: 20, label: \"series C\" },\n];\n\nconst CenterReportPage = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [selectedValue, setSelectedValue] = useState(null);\n  const [selectedSalesExecRow, setSelectedSalesExecRow] = useState(null);\n\n  const [salesExecDtlRows, setSalesExecDtlRows] = useState([]);\n  const [clientDtlRows, setClientDtlRows] = useState([]);\n\n  //to save salesExecDtls to create new emp\n  const [salesExecName, setSalesExecName] = useState(\"\");\n  const [salesExecContact, setSalesExecContact] = useState(\"\");\n  const [salesExecEmail, setSalesExecEmail] = useState(\"\");\n  const [salesExecAdd, setSalesExecAdd] = useState(\"\");\n  const [salesExecCenter, setSalesExecCenter] = useState(\"\");\n\n  //to create new center\n  const [centerName, setCenterName] = useState(\"\");\n  const [centerCode, setCenterCode] = useState(\"\");\n  const [centerIncharge, setCenterIncharge] = useState(\"\");\n\n  //for center selection\n  const [selectedCenter, setSelectedCenter] = useState(null);\n  const [listOfCenters, setListOfCenters] = useState([]);\n  const CenterOptions = listOfCenters.map((center) => ({\n    value: center.id,\n    label: center.centerName, // Adjust this based on your data structure\n  }));\n  const handleCenterSelect = (selectedOption) => {\n    console.log(selectedOption);\n    setCenterCode(selectedOption.value);\n    setSelectedCenter(selectedOption);\n    setSalesExecCenter(selectedOption.value);\n  };\n\n  //to handle center radio change\n  const handleCenterRadioChange = (event, value, row) => {\n    setSelectedValue(value);\n    setSelectedSalesExecRow(row);\n    fetchSalesExecOnCenterSelect(row.id);\n\n    console.log(row.id);\n  };\n\n  //handle sales exec radio change\n  const handleSalesExecRadioChange = (event, value, row) => {\n    setSelectedValue(value);\n    setSelectedSalesExecRow(row);\n    fetchClientLoanDtls(row.id);\n  };\n\n  const [addCenterDialogue, setAddCenterDialogue] = useState(false);\n  const [addSalesExecDialogue, setAddSalesExecDialogue] = useState(false);\n  const [knowClientDtlsDialogue, setKnowClientDtlsDialogue] = useState(false);\n\n  const [centerDtlRows, setCenterDtlRows] = useState([]);\n\n  const handleKnowClientDtlsDialogueClose = () => {\n    setKnowClientDtlsDialogue(false);\n  };\n\n  // transition for know client details modal\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\n  // Clear the selection when changing the page\n  useEffect(() => {\n    setSelectedValue(null);\n  }, [page]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const alternateRowColor = (index) => {\n    const backgroundColor = index % 2 === 0 ? \"grey.300\" : \"#f2f2f2\"; // Black and grayish colors\n    const textColor = index % 2 === 0 ? \"white\" : \"black\"; // White and black text colors\n    return { backgroundColor, color: textColor };\n  };\n\n  //fetched clientLoanDetails then pass to CLientDtls func to get client's name\n  const fetchClientLoanDtls = async (salesExecId) => {\n    try {\n      const response = await axios.get(\n        `/api/v1/MoneyRecord/getAllcashFlow?SalesExecID=${salesExecId}`\n      );\n\n      const entries = response.data.entries;\n\n      const clientDetailsPromises = entries.map(async (entry) => {\n        const clientDetails = await fetchClientDetails(entry.CustomerID, entry);\n        return { ...entry, clientName: clientDetails.clientName };\n      });\n      const updatedEntries = await Promise.all(clientDetailsPromises);\n      setClientDtlRows(updatedEntries);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchClientDetails = async (clientId, row) => {\n    try {\n      const response = await axios.get(\n        `/api/v1/client/getClientPersonalDetailsById/${clientId}`\n      );\n      const clientName = response.data.clientPersonal.CustomerName;\n      return { ...row, clientName };\n    } catch (error) {\n      console.log(error);\n      return row; // Return the original row in case of an error\n    }\n  };\n\n  //to fetch CenterDtls\n  const fetchCenterRows = async () => {\n    const response = await axios.get(\"/api/v1/center/getAllCenterDetails\");\n\n    setCenterDtlRows(response.data.centers);\n    setListOfCenters(response.data.centers);\n  };\n\n  const fetchSalesExecOnCenterSelect = async (centerId) => {\n    try {\n      const response = await axios.get(\n        `/api/v1/employee/getAllEmployees?centerId=${centerId}`\n      );\n      console.log(response.data.employees);\n      setSalesExecDtlRows(response.data.employees);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //to create center\n  const handleSaveCenterDtls = async () => {\n    const centerDtls = {\n      centerCode: centerCode,\n      centerName: centerName,\n      centerIncharge: centerIncharge,\n    };\n\n    try {\n      const response = await axios.post(\n        \"/api/v1/center/createCenterDetails\",\n        centerDtls\n      );\n\n      if (response.status === 201) {\n        console.log(\"Center Created\");\n        setAddCenterDialogue(false);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  //to create salesExec\n  const handleSaveSalesExec = async () => {\n    const SalesExecDtls = {\n      name: salesExecName,\n      phoneNumber: salesExecContact,\n      email: salesExecEmail,\n      address: salesExecAdd,\n      Role: \"SalesExec\",\n      password: salesExecContact,\n      centerId: salesExecCenter,\n    };\n    console.log(SalesExecDtls);\n    try {\n      const response = await axios.post(\n        \"/api/v1/employee/register\",\n        SalesExecDtls\n      );\n      if (response.status === 201) {\n        console.log(\"Sales Executive added\");\n        setAddSalesExecDialogue(false);\n      } else {\n        console.log(\"not done\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCenterRows();\n  }, []);\n  return (\n    <>\n      <AdminNavbar />\n      {/* Center Details */}\n      <Box sx={{ marginTop: \"70px\" }}>\n        <section className=\"CenterDetails\">\n          <Box>\n            <Box\n              sx={{\n                backgroundColor: \"white\",\n                width: \"100%\",\n                height: \"100%\",\n                padding: \"20px\",\n              }}\n            >\n              <Grid container spacing={2} alignItems=\"stretch\">\n                <Grid item xs={12} md={8}>\n                  <Box\n                    sx={{\n                      height: \"100%\",\n                      backgroundColor: \"#5F8D4E\",\n                      width: \"100%\",\n                      display: \"flex-col\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      padding: \"20px\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        width: \"100%\",\n                        minHeight: \"20px\",\n                        padding: \"10px\",\n                      }}\n                    >\n                      <Typography variant=\"h4\">Center Details</Typography>\n                    </Box>\n\n                    <TableContainer component={Paper}>\n                      <Table>\n                        <TableHead>\n                          <TableRow\n                            sx={{ backgroundColor: \"black\", color: \"white\" }}\n                          >\n                            <TableCell style={{ color: \"white\" }}>\n                              Slno\n                            </TableCell>\n                            <TableCell style={{ color: \"white\" }}>\n                              Center Code\n                            </TableCell>\n                            <TableCell style={{ color: \"white\" }}>\n                              CenterName\n                            </TableCell>\n                            <TableCell style={{ color: \"white\" }}>\n                              IFSCcode\n                            </TableCell>\n                            <TableCell style={{ color: \"white\" }}>\n                              Amount\n                            </TableCell>\n                            <TableCell style={{ color: \"white\" }}>\n                              Select\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n\n                        <TableBody>\n                          {centerDtlRows\n                            .slice(\n                              page * rowsPerPage,\n                              page * rowsPerPage + rowsPerPage\n                            )\n                            .map((row, index) => (\n                              <TableRow\n                                key={row.slno}\n                                sx={alternateRowColor(index)} // Apply styles here\n                              >\n                                <TableCell>{index + 1}</TableCell>\n                                <TableCell>{row.centerCode}</TableCell>\n                                <TableCell>{row.centerName}</TableCell>\n                                <TableCell>{row.IFSC}</TableCell>\n                                <TableCell>{row.TotalAmount}</TableCell>\n                                <TableCell>\n                                  <RadioGroup\n                                    value={selectedValue} // Add state to manage the selected radio button\n                                    onChange={(event) =>\n                                      handleCenterRadioChange(\n                                        event,\n                                        row.centerCode,\n                                        row\n                                      )\n                                    }\n                                  >\n                                    <FormControlLabel\n                                      value={row.centerCode}\n                                      control={<Radio />}\n                                      label=\"\"\n                                    />\n                                  </RadioGroup>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                        </TableBody>\n                      </Table>\n                      <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={centerDtlRows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                      />\n                    </TableContainer>\n                    <Box sx={{ marginTop: \"10px\", textAlign: \"right\" }}>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => setAddCenterDialogue(true)}\n                        sx={{\n                          backgroundColor: \"#285430\",\n                          \"&:hover\": {\n                            backgroundColor: \"#224B0C\",\n                          },\n                        }}\n                      >\n                        Add Center\n                      </Button>\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Box\n                    sx={{\n                      height: \"600px\",\n                      backgroundColor: \"#A4BE7B\",\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      justifyContent: \"center\",\n                      padding: \"20px\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        height: \"100%\",\n                        backgroundColor: \"white\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        padding: \"20px\",\n                        borderRadius: \"10px\",\n                      }}\n                    >\n                      {/* Content for the white box */}\n                      <Typography variant=\"h5\">Investor's data</Typography>\n                      <PieChart\n                        series={[\n                          {\n                            data: inverstorPieChartData,\n                            highlightScope: {\n                              faded: \"global\",\n                              highlighted: \"item\",\n                            },\n                            faded: {\n                              innerRadius: 20,\n                              additionalRadius: -30,\n                              color: \"gray\",\n                            },\n                          },\n                        ]}\n                        height={150}\n                      />\n                      <Typography variant=\"h5\">\n                        Sales Executive's data\n                      </Typography>\n\n                      <PieChart\n                        series={[\n                          {\n                            data: clientPieChartData,\n                            highlightScope: {\n                              faded: \"global\",\n                              highlighted: \"item\",\n                            },\n                            faded: {\n                              innerRadius: 20,\n                              additionalRadius: -30,\n                              color: \"gray\",\n                            },\n                          },\n                        ]}\n                        height={150}\n                      />\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </section>\n      </Box>\n\n      {/* Sales Executives & CLient Details */}\n      <Box>\n        <section>\n          <Box>\n            <Box\n              sx={{\n                backgroundColor: \"white\",\n                width: \"100%\",\n                height: \"100%\",\n                padding: \"20px\",\n              }}\n            >\n              <Grid container spacing={2} alignItems=\"stretch\">\n                <Grid item xs={12} md={5}>\n                  <Box\n                    sx={{\n                      height: \"100%\",\n                      backgroundColor: \"#5F8D4E\",\n                      width: \"100%\",\n                      display: \"flex-col\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      padding: \"20px\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        width: \"100%\",\n                        minHeight: \"20px\",\n                        padding: \"10px\",\n                      }}\n                    >\n                      <Typography variant=\"h4\">\n                        Sales Executives Details\n                      </Typography>\n                    </Box>\n\n                    <TableContainer component={Paper}>\n                      <Table>\n                        <TableHead>\n                          <TableRow\n                            sx={{ backgroundColor: \"black\", color: \"white\" }}\n                          >\n                            <TableCell style={{ color: \"white\" }}>\n                              Select\n                            </TableCell>\n\n                            <TableCell style={{ color: \"white\" }}>\n                              Name\n                            </TableCell>\n                            <TableCell style={{ color: \"white\" }}>\n                              Contact\n                            </TableCell>\n\n                            <TableCell style={{ color: \"white\" }}>\n                              Amount\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n\n                        <TableBody>\n                          {salesExecDtlRows\n                            .slice(\n                              page * rowsPerPage,\n                              page * rowsPerPage + rowsPerPage\n                            )\n                            .map((row, index) => (\n                              <TableRow\n                                key={row.id} // Use salesExecId as the key\n                                sx={alternateRowColor(index)} // Apply styles here\n                              >\n                                <TableCell>\n                                  <RadioGroup\n                                    value={selectedValue}\n                                    onChange={(event) =>\n                                      handleSalesExecRadioChange(\n                                        event,\n                                        row.id,\n                                        row\n                                      )\n                                    }\n                                    name=\"salesExecRadioGroup\" // Add a common name for all radio buttons\n                                  >\n                                    <FormControlLabel\n                                      value={row.id}\n                                      control={<Radio />}\n                                      label=\"\"\n                                    />\n                                  </RadioGroup>\n                                </TableCell>\n                                <TableCell>{row.Name}</TableCell>\n                                <TableCell>{row.Phone}</TableCell>\n                                <TableCell>{row.AmountLended}</TableCell>\n                              </TableRow>\n                            ))}\n                        </TableBody>\n                      </Table>\n                      <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={centerDtlRows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                      />\n                    </TableContainer>\n                    <Box sx={{ marginTop: \"10px\", textAlign: \"right\" }}>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => setAddSalesExecDialogue(true)}\n                        sx={{\n                          backgroundColor: \"#285430\",\n                          \"&:hover\": {\n                            backgroundColor: \"#224B0C\",\n                          },\n                        }}\n                      >\n                        Add Sales Executive\n                      </Button>\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} md={7}>\n                  <Box\n                    sx={{\n                      height: \"100%\",\n                      backgroundColor: \"#A4BE7B\",\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      justifyContent: \"center\",\n                      padding: \"20px\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        width: \"100%\",\n                        minHeight: \"20px\",\n                        padding: \"10px\",\n                      }}\n                    >\n                      <Typography variant=\"h5\">Client Details</Typography>\n                    </Box>\n\n                    <TableContainer component={Paper}>\n                      <Table placeholder={\"Select\"}>\n                        <TableHead>\n                          <TableRow\n                            sx={{ backgroundColor: \"black\", color: \"white\" }}\n                          >\n                            <TableCell style={{ color: \"white\" }}>\n                              Slno\n                            </TableCell>\n                            <TableCell style={{ color: \"white\" }}>\n                              Name\n                            </TableCell>\n                            <TableCell style={{ color: \"white\" }}>\n                              Loan Date\n                            </TableCell>\n\n                            <TableCell style={{ color: \"white\" }}>\n                              Payable Amount\n                            </TableCell>\n                            <TableCell style={{ color: \"white\" }}>\n                              Status\n                            </TableCell>\n                          </TableRow>\n                        </TableHead>\n\n                        <TableBody>\n                          {clientDtlRows\n                            .slice(\n                              page * rowsPerPage,\n                              page * rowsPerPage + rowsPerPage\n                            )\n                            .map((row, index) => (\n                              <TableRow\n                                key={row.CustomerID}\n                                sx={alternateRowColor(index)} // Apply styles here\n                              >\n                                <TableCell>{index + 1}</TableCell>\n                                <TableCell>{row.clientName}</TableCell>\n                                <TableCell>\n                                  {row.dateOfLoan.slice(0, 10)}\n                                </TableCell>\n                                <TableCell>{row.LoanAmount}</TableCell>\n                                <TableCell>{row.Status}</TableCell>\n                              </TableRow>\n                            ))}\n                        </TableBody>\n                      </Table>\n                      <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={clientDtlRows.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                      />\n                    </TableContainer>\n                    <Box sx={{ marginTop: \"10px\", textAlign: \"right\" }}>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => setKnowClientDtlsDialogue(true)}\n                        sx={{\n                          backgroundColor: \"#285430\",\n                          \"&:hover\": {\n                            backgroundColor: \"#224B0C\",\n                          },\n                        }}\n                      >\n                        Know More\n                      </Button>\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </section>\n      </Box>\n\n      {/* Modal to add Center */}\n      <Dialog\n        open={addCenterDialogue}\n        onClose={() => setAddCenterDialogue(false)}\n      >\n        <DialogTitle>Add Center</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Please enter Center details:</DialogContentText>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"16px\",\n              minWidth: \"100px\",\n              width: \"500px\",\n              marginTop: \"5px\",\n            }}\n          >\n            <TextField\n              label=\"Center Name*\"\n              value={centerName}\n              onChange={(e) => setCenterName(e.target.value)}\n              fullWidth\n            />\n            <TextField\n              label=\"Center Code* [eg. ABC123]\"\n              value={centerCode}\n              onChange={(e) => setCenterCode(e.target.value)}\n              fullWidth\n            />\n            <TextField\n              label=\"Center Incharge\"\n              value={centerIncharge}\n              onChange={(e) => setCenterIncharge(e.target.value)}\n              fullWidth\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            sx={{ color: \"#285430\" }}\n            onClick={() => setAddCenterDialogue(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSaveCenterDtls}\n            // color=\"white\"\n            sx={{\n              color: \"white\",\n              backgroundColor: \"#285430\",\n              \"&:hover\": {\n                backgroundColor: \"#224B0C\",\n              },\n            }}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Modal to add sales Executive  */}\n      <Dialog\n        open={addSalesExecDialogue}\n        onClose={() => setAddSalesExecDialogue(false)}\n      >\n        <DialogTitle>Add Sales Executive</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please enter Sales Executive details:\n          </DialogContentText>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"16px\",\n              minWidth: \"100px\",\n              width: \"500px\",\n              marginTop: \"5px\",\n            }}\n          >\n            <TextField\n              label=\"Sales Executive Name*\"\n              value={salesExecName}\n              onChange={(e) => setSalesExecName(e.target.value)}\n              fullWidth\n            />\n\n            <TextField\n              label=\"Contact No.\"\n              value={salesExecContact}\n              onChange={(e) => setSalesExecContact(e.target.value)}\n              fullWidth\n            />\n            <TextField\n              label=\"Email Address\"\n              value={salesExecEmail}\n              onChange={(e) => setSalesExecEmail(e.target.value)}\n              fullWidth\n            />\n            <TextField\n              label=\"Address\"\n              value={salesExecAdd}\n              onChange={(e) => setSalesExecAdd(e.target.value)}\n              fullWidth\n            />\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                borderRadius: \"10px\",\n                marginTop: \"10px\",\n              }}\n            >\n              <Select\n                styles={{\n                  control: (baseStyles) => ({\n                    ...baseStyles,\n                    width: \"250px\",\n                    height: \"50px\",\n                    zIndex: \"0\",\n                  }),\n                  provided: (baseStyles) => ({\n                    ...baseStyles,\n                    zIndex: \"9999 !important\",\n                  }),\n                }}\n                value={selectedCenter} // Ensure 'value' is being set correctly\n                onChange={handleCenterSelect}\n                options={CenterOptions}\n                placeholder=\"Select Center\"\n              />\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            sx={{ color: \"#285430\" }}\n            onClick={() => setAddSalesExecDialogue(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSaveSalesExec}\n            // color=\"white\"\n            sx={{\n              color: \"white\",\n              backgroundColor: \"#285430\",\n              \"&:hover\": {\n                backgroundColor: \"#224B0C\",\n              },\n            }}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Full Screen Modal for Client details */}\n      <Dialog\n        fullScreen\n        open={knowClientDtlsDialogue}\n        onClose={handleKnowClientDtlsDialogueClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar sx={{ position: \"relative\", backgroundColor: \"#5F8D4E\" }}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleKnowClientDtlsDialogueClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n              Client Details\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Box p={8}>\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow sx={{ backgroundColor: \"black\", color: \"white\" }}>\n                  <TableCell style={{ color: \"white\" }}>Slno</TableCell>\n                  <TableCell style={{ color: \"white\" }}>Name</TableCell>\n                  <TableCell style={{ color: \"white\" }}>Loan Date</TableCell>\n\n                  <TableCell style={{ color: \"white\" }}>\n                    Collection Day\n                  </TableCell>\n\n                  <TableCell style={{ color: \"white\" }}>\n                    Principal Amount\n                  </TableCell>\n                  <TableCell style={{ color: \"white\" }}>Interest</TableCell>\n                  <TableCell style={{ color: \"white\" }}>\n                    Payable Amount\n                  </TableCell>\n                  <TableCell style={{ color: \"white\" }}>PayCount</TableCell>\n                  <TableCell style={{ color: \"white\" }}>Status</TableCell>\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {clientDtlRows\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => (\n                    <TableRow\n                      key={row.CustomerID}\n                      sx={alternateRowColor(index)} // Apply styles here\n                    >\n                      <TableCell>{index + 1}</TableCell>\n                      <TableCell>{row.CustomerName}</TableCell>\n                      <TableCell>{row.dateOfLoan}</TableCell>\n                      <TableCell>{row.DayOfCollection}</TableCell>\n                      <TableCell>{row.PrincipalAmount}</TableCell>\n                      <TableCell>{row.Interest}</TableCell>\n                      <TableCell>{row.PrincipalAmount}</TableCell>\n                      <TableCell>{row.PayCount}</TableCell>\n                      <TableCell>{row.Status}</TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CenterReportPage;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AdminNavbar from \"../Components/AdminNavbar\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Radio from \"@mui/material/Radio\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport Button from \"@mui/material/Button\";\nimport { IconButton } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nconst AddSalesExecutivePage = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [selectedRowSalesExec, setSelectedRowSalesExec] = useState(null);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n\n  const [selectedRowClient, setSelectedRowClient] = useState(null);\n  const [selectedRowData, setSelectedRowData] = useState(null);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [fetchedRows, setFetchedRows] = useState([]);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n  const [clientRows, setClientRows] = useState([]);\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const [newUserData, setNewUserData] = useState({\n    name: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n  });\n  const [clientPage, setClientPage] = useState(0);\n  const [clientRowsPerPage, setClientRowsPerPage] = useState(5);\n\n  const handleChangeClientPage = (event, newPage) => {\n    setClientPage(newPage);\n  };\n\n  const handleChangeClientRowsPerPage = (event) => {\n    setClientRowsPerPage(+event.target.value);\n    setClientPage(0);\n  };\n\n  const handleAddUser = () => {\n    setOpenDialog(true);\n  };\n\n  const handleSaveUser = () => {\n    // Handle saving new user data here\n    console.log(\"New User Data:\", newUserData);\n    setOpenDialog(false);\n    // Reset input fields after saving if needed\n    setNewUserData({\n      name: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      address: \"\",\n    });\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const handleEdit = () => {\n    setIsEditMode(true);\n  };\n\n  //saving sales exec\n  const handleSave = async () => {\n    setIsEditMode(false);\n\n    // Create the payload with the updated data from input fields\n    const payload = {\n      name: selectedRowData.Name,\n      email: selectedRowData.EmailAddr,\n      phoneNumber: selectedRowData.Phone,\n      address: selectedRowData.Address,\n    };\n\n    try {\n      // Assuming you have the ID of the employee\n      const employeeId = selectedRowData.id; // Replace this with the actual ID\n\n      // Send a PATCH request to update the employee by ID\n      const response = await axios.patch(\n        `/api/v1/employee/updateEmployeeById/${employeeId}`,\n        payload\n      );\n\n      if (response.status === 200) {\n        setSnackbarSeverity(\"success\");\n        setSnackbarMessage(\"Employee updated successfully\");\n        setSnackbarOpen(true);\n        fetchSalesExec();\n        // Handle success, reset fields or perform any additional actions\n      } else {\n        setSnackbarSeverity(\"error\");\n        setSnackbarMessage(\"Failed to update employee\");\n        setSnackbarOpen(true);\n        // Handle failure scenario\n      }\n    } catch (error) {\n      setSnackbarSeverity(\"error\");\n      setSnackbarMessage(\"Error updating employee\");\n      setSnackbarOpen(true);\n      console.error(\"Error updating employee:\", error.message);\n      // Handle error scenario\n    }\n  };\n\n  // Replace with your data or initialize as needed\n  const SalesExecColumns = [\n    { id: \"slno\", label: \"Slno.\", minWidth: 100 },\n    { id: \"name\", label: \"Name\", minWidth: 170 },\n    { id: \"phoneNumber\", label: \"Phone Number\", minWidth: 170 },\n    { id: \"amountFloated\", label: \"Amount\", minWidth: 170, align: \"center\" },\n  ];\n\n  const clientColumns = [\n    { id: \"slno\", label: \"Slno.\", minWidth: 100, align: \"center\" },\n    { id: \"name\", label: \"Name\", minWidth: 150, align: \"center\" },\n    {\n      id: \"phoneNumber\",\n      label: \"Phone Number\",\n      minWidth: 150,\n      align: \"center\",\n    },\n    { id: \"dateOfLoan\", label: \"Date of Loan\", minWidth: 150, align: \"center\" },\n    { id: \"amount\", label: \"Amount\", minWidth: 150, align: \"center\" },\n  ];\n\n  const alternateRowColor = (index) => {\n    return index % 2 === 0 ? \"#f2f2f2\" : \"#dddddd\"; // Grayish and blackish colors\n  };\n\n  const handleRowSelectSalesExec = (event, row) => {\n    setSelectedRowSalesExec(row.Name);\n    setSelectedEmployee(row.id);\n    setSelectedRowData(row);\n    fetchClients(row.id); // Pass the selected sales exec ID to fetchClients\n  };\n\n  const handleRowSelectClient = (event, row) => {\n    setSelectedRowClient(row.phoneNumber);\n    console.log(\"Selected Client Row:\", row);\n  };\n\n  const fetchSalesExec = async () => {\n    try {\n      const response = await axios.get(\n        \"/api/v1/employee/getAllEmployees?Role=SalesExec\"\n      );\n      if (response.status === 200) {\n        const { employees } = response.data;\n        setFetchedRows(employees);\n        console.log(employees);\n      } else {\n        throw new Error(\"Failed to fetch data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error.message);\n    }\n  };\n  const fetchClients = async (salesExecID) => {\n    try {\n      const response = await axios.get(\n        `/api/v1/client/getAllClientPersonalDetails?salesExecID=${salesExecID}`\n      );\n      if (response.status === 200) {\n        const { clients } = response.data;\n        setClientRows(clients); // Update the clientRows state with the fetched data\n        console.log(\"clients:\", clients);\n      } else {\n        throw new Error(\"Failed to fetch data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchSalesExec();\n  }, []);\n\n  useEffect(() => {\n    if (selectedEmployee) {\n      fetchClients(selectedEmployee);\n    }\n  }, [selectedEmployee]);\n\n  return (\n    <>\n      <AdminNavbar />\n      {/* Header Section */}\n      <section className=\"header\">\n        <Box\n          sx={{\n            marginTop: \"63px\",\n            backgroundColor: \"white\",\n            width: \"100%\",\n            minHeight: \"20px\",\n            padding: \"20px\",\n          }}\n        >\n          <Typography variant=\"h5\">Sales Excecutives </Typography>\n        </Box>\n      </section>\n\n      {/* SalesExecDetails */}\n      <section className=\"SalesExecDetails\">\n        <Box>\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              width: \"100%\",\n              height: \"600px\",\n              padding: \"20px\",\n            }}\n          >\n            <Grid container spacing={2} alignItems=\"stretch\">\n              <Grid item xs={7}>\n                {/* Sales Exec Table */}\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    backgroundColor: \"#A4BE7B\",\n                    width: \"100%\",\n                    display: \"flex-col\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    padding: \"20px\",\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n                    <TableContainer sx={{ maxHeight: 440 }}>\n                      <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                          <TableRow style={{ backgroundColor: \"black\" }}>\n                            <TableCell style={{ background: \"black\" }} />\n                            {SalesExecColumns.map((column) => (\n                              <TableCell\n                                key={column.id}\n                                align={column.align}\n                                style={{\n                                  background: \"black\",\n                                  minWidth: column.minWidth,\n                                  color: \"white\",\n                                }}\n                              >\n                                {column.label}\n                              </TableCell>\n                            ))}\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {fetchedRows.map((row, index) => (\n                            <TableRow\n                              hover\n                              role=\"checkbox\"\n                              tabIndex={-1}\n                              key={row.id} // Use a unique identifier for the key, assuming row.id exists\n                              style={{\n                                backgroundColor: alternateRowColor(index),\n                              }}\n                              // Handle selection for Sales Executives table\n                              onClick={(event) =>\n                                handleRowSelectSalesExec(event, row)\n                              }\n                            >\n                              <TableCell>\n                                <Radio\n                                  value={row.Phone} // Use a unique identifier for the value\n                                  checked={selectedRowSalesExec === row.Name} // Compare with the same field used for selection\n                                  onChange={(event) =>\n                                    handleRowSelectSalesExec(event, row)\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{index + 1}</TableCell>\n                              <TableCell align=\"center\">{row.Name}</TableCell>\n                              <TableCell align=\"center\">{row.Phone}</TableCell>\n                              <TableCell align=\"center\">\n                                {row.AmountLended || 0}\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                    <TablePagination\n                      rowsPerPageOptions={[5, 10, 15]}\n                      component=\"div\"\n                      count={fetchedRows.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                  </Paper>\n                  <Box sx={{ marginTop: \"20px\", textAlign: \"right\" }}>\n                    <Button\n                      variant=\"contained\"\n                      // color=\"primary\"\n                      onClick={handleAddUser}\n                      sx={{\n                        backgroundColor: \"#285430\",\n                        \"&:hover\": {\n                          backgroundColor: \"#224B0C\",\n                        },\n                      }}\n                    >\n                      Add user\n                    </Button>\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item xs={5}>\n                {/* Sales Exec Profile  */}\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    backgroundColor: \"#5F8D4E\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    padding: \"20px\",\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      height: \"100%\",\n                      backgroundColor: \"white\",\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      justifyContent: \"center\",\n                      padding: \"20px\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    <Box>\n                      <Grid container spacing={2} alignItems=\"center\">\n                        <Grid\n                          item\n                          xs={12}\n                          sx={{ display: \"flex\", justifyContent: \"center\" }}\n                        >\n                          <Avatar\n                            alt=\"User Logo\"\n                            src=\"/path_to_your_user_logo.jpg\"\n                            sx={{ width: 100, height: 100 }}\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <TextField\n                            label=\"Name\"\n                            value={selectedRowData ? selectedRowData.Name : \"\"}\n                            disabled={!isEditMode} // Enable/disable based on isEditMode\n                            onChange={(e) =>\n                              setSelectedRowData({\n                                ...selectedRowData,\n                                Name: e.target.value, // Update 'Name' field in the state\n                              })\n                            }\n                            fullWidth\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <TextField\n                            label=\"Email\"\n                            value={\n                              selectedRowData ? selectedRowData.EmailAddr : \"\"\n                            }\n                            disabled={!isEditMode} // Enable/disable based on isEditMode\n                            onChange={(e) =>\n                              setSelectedRowData({\n                                ...selectedRowData,\n                                EmailAddr: e.target.value, // Update 'EmailAddr' field in the state\n                              })\n                            }\n                            fullWidth\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <TextField\n                            label=\"Phone Number\"\n                            value={selectedRowData ? selectedRowData.Phone : \"\"}\n                            disabled={!isEditMode} // Enable/disable based on isEditMode\n                            onChange={(e) =>\n                              setSelectedRowData({\n                                ...selectedRowData,\n                                Phone: e.target.value, // Update 'Phone' field in the state\n                              })\n                            }\n                            fullWidth\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <TextField\n                            label=\"Address\"\n                            value={\n                              selectedRowData ? selectedRowData.Address : \"\"\n                            }\n                            disabled={!isEditMode} // Enable/disable based on isEditMode\n                            onChange={(e) =>\n                              setSelectedRowData({\n                                ...selectedRowData,\n                                Address: e.target.value, // Update 'Address' field in the state\n                              })\n                            }\n                            fullWidth\n                          />\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  </Box>\n                  <Box sx={{ marginTop: \"20px\", textAlign: \"right\" }}>\n                    {isEditMode ? ( // Conditionally render Save/Edit button based on edit mode\n                      <Button\n                        variant=\"contained\"\n                        // color=\"primary\"\n                        sx={{\n                          backgroundColor: \"#285430\",\n                          \"&:hover\": {\n                            backgroundColor: \"#224B0C\",\n                          },\n                        }}\n                        onClick={handleSave}\n                      >\n                        Save\n                      </Button>\n                    ) : (\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleEdit}\n                        sx={{\n                          backgroundColor: \"#285430\",\n                          \"&:hover\": {\n                            backgroundColor: \"#224B0C\",\n                          },\n                        }}\n                      >\n                        Edit\n                        <EditIcon fontSize=\"sm\" />\n                      </Button>\n                    )}\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </section>\n\n      {/* ClientDetails */}\n      <section className=\"ClientDetails\">\n        <Box>\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              width: \"100%\",\n              height: \"680px\",\n              padding: \"20px\",\n            }}\n          >\n            <Grid container spacing={2} alignItems=\"stretch\">\n              <Grid item xs={12} md={8}>\n                {/* customer Details Table */}\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    backgroundColor: \"#5F8D4E\",\n                    width: \"100%\",\n                    display: \"flex-col\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    padding: \"20px\",\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      width: \"100%\",\n                      minHeight: \"20px\",\n                      padding: \"20px\",\n                    }}\n                  >\n                    <Typography variant=\"h5\">Customer Details </Typography>\n                  </Box>\n                  <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n                    <TableContainer sx={{ maxHeight: 440 }}>\n                      <Table stickyHeader aria-label=\"sticky table\">\n                        <TableHead>\n                          <TableRow style={{ backgroundColor: \"black\" }}>\n                            <TableCell style={{ background: \"black\" }} />\n                            {clientColumns.map((column) => (\n                              <TableCell\n                                key={column.id}\n                                align={column.align}\n                                style={{\n                                  background: \"black\",\n                                  minWidth: column.minWidth,\n                                  color: \"white\",\n                                }}\n                              >\n                                {column.label}\n                              </TableCell>\n                            ))}\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {clientRows\n                            .slice(\n                              clientPage * clientRowsPerPage,\n                              clientPage * clientRowsPerPage + clientRowsPerPage\n                            )\n                            .map((row, index) => (\n                              <TableRow\n                                hover\n                                role=\"checkbox\"\n                                tabIndex={-1}\n                                key={row.CutomerID} // Assuming CutomerID is a unique identifier\n                                style={{\n                                  backgroundColor:\n                                    index % 2 === 0 ? \"#f2f2f2\" : \"#dddddd\",\n                                }}\n                                // Handle selection for Client Details table\n                                onClick={(event) =>\n                                  handleRowSelectClient(event, row)\n                                }\n                              >\n                                <TableCell>\n                                  <Radio\n                                    value={row.CutomerID} // Use a unique identifier for the value\n                                    checked={\n                                      selectedRowClient === row.CutomerID\n                                    }\n                                    onChange={(event) =>\n                                      handleRowSelectClient(event, row)\n                                    }\n                                  />\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {index + 1}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {row.CustomerName}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {row.MobileNo1}\n                                </TableCell>\n\n                                {clientColumns.map((column) => (\n                                  <TableCell key={column.id} align=\"center\">\n                                    {row[column.id]}\n                                  </TableCell>\n                                ))}\n                              </TableRow>\n                            ))}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n\n                    <TablePagination\n                      rowsPerPageOptions={[5, 10, 15]}\n                      component=\"div\"\n                      count={clientRows.length}\n                      rowsPerPage={clientRowsPerPage}\n                      page={clientPage}\n                      onPageChange={handleChangeClientPage}\n                      onRowsPerPageChange={handleChangeClientRowsPerPage}\n                    />\n                  </Paper>\n                </Box>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Box\n                  sx={{\n                    height: \"600px\",\n                    backgroundColor: \"#A4BE7B\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    padding: \"20px\",\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Box\n                    sx={{\n                      height: \"100%\",\n                      backgroundColor: \"white\",\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      justifyContent: \"center\",\n                      padding: \"20px\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    {/* Content for the white box */}\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </section>\n\n      {/* Modal to add user */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <DialogTitle>Add User</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Please enter user details:</DialogContentText>\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"16px\",\n              minWidth: \"lg\",\n            }}\n          >\n            <TextField\n              label=\"Name\"\n              value={newUserData.name}\n              onChange={(e) =>\n                setNewUserData({ ...newUserData, name: e.target.value })\n              }\n              fullWidth\n            />\n            <TextField\n              label=\"Email\"\n              value={newUserData.email}\n              onChange={(e) =>\n                setNewUserData({ ...newUserData, email: e.target.value })\n              }\n              fullWidth\n            />\n            <TextField\n              label=\"Phone Number\"\n              value={newUserData.phoneNumber}\n              onChange={(e) =>\n                setNewUserData({ ...newUserData, phoneNumber: e.target.value })\n              }\n              fullWidth\n            />\n            <TextField\n              label=\"Address\"\n              value={newUserData.address}\n              onChange={(e) =>\n                setNewUserData({ ...newUserData, address: e.target.value })\n              }\n              fullWidth\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\n          <Button\n            onClick={handleSaveUser}\n            // color=\"primary\"\n            sx={{\n              backgroundColor: \"#285430\",\n              \"&:hover\": {\n                backgroundColor: \"#224B0C\",\n              },\n            }}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default AddSalesExecutivePage;\n","import React, { useEffect, useState } from \"react\";\nimport SalesExecNavbar from \"../Components/SalesExecNavbar\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  TablePagination,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  TextField,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardHeader,\n  ListItem,\n  List,\n  ListItemText,\n  Avatar,\n  ListItemAvatar,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\n\nconst SalesExecutiveDashboardPage = () => {\n  const salesExecId = localStorage.getItem(\"SalesExecId\");\n\n  const [clientDtlRows, setClientDtlRows] = useState([]);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const alternateRowColor = (index) => {\n    const backgroundColor = index % 2 === 0 ? \"grey.300\" : \"#f2f2f2\"; // Black and grayish colors\n    const textColor = index % 2 === 0 ? \"white\" : \"black\"; // White and black text colors\n    return { backgroundColor, color: textColor };\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  //for UpdateClientDialogue\n  const [openClientUpdateDialogue, setOpenClientUpdateDialogue] =\n    useState(false);\n  const [dialogueClientName, setDialogueContentName] = useState(\"\");\n  const [dialogueClientPhone, setDialogueContentPhone] = useState(\"\");\n\n  //for center selection\n  const [selectedCenter, setSelectedCenter] = useState({\n    value: \"all\",\n    label: \"All\",\n  });\n  const [selectedCenterId, setSelectedCenterId] = useState(\"all\");\n\n  const [listOfCenters, setListOfCenters] = useState([]);\n  const CenterOptions = [\n    { value: \"all\", label: \"All\" }, // Add this line for the \"All\" option\n    ...listOfCenters.map((center) => ({\n      value: center.id,\n      label: center.centerName,\n      centerCode: center.centerCode,\n      IFSC: center.IFSC,\n      Incharge: center.centerIncharge,\n    })),\n  ];\n\n  //to fetch CenterDtls\n  const fetchCenterRows = async () => {\n    try {\n      const response = await axios.get(\"/api/v1/center/getAllCenterDetails\");\n\n      setListOfCenters(response.data.centers);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCenterSelect = (selectedOption) => {\n    setSelectedCenter(selectedOption);\n    setSelectedCenterId(selectedOption.value);\n    fetchClientLoanDtls(salesExecId, selectedOption.value);\n  };\n\n  //fetched clientLoanDetails then pass to CLientDtls func to get client's name\n  const fetchClientLoanDtls = async (salesExecId, selectedCenterId) => {\n    try {\n      let url;\n      if (selectedCenterId === \"all\") {\n        // If the selectedCenterId is \"all\", fetch all entries without specifying a CenterID\n        url = `/api/v1/MoneyRecord/getAllcashFlow?SalesExecID=${salesExecId}`;\n      } else {\n        // If a specific center is selected, fetch entries with the specified CenterID\n        url = `/api/v1/MoneyRecord/getAllcashFlow?SalesExecID=${salesExecId}&CenterID=${selectedCenterId}`;\n      }\n\n      const response = await axios.get(url);\n\n      const entries = response.data.entries;\n      console.log(entries);\n\n      const clientDetailsPromises = entries.map(async (entry) => {\n        const clientDetails = await fetchClientDetails(entry.CustomerID, entry);\n        return {\n          ...entry,\n          clientName: clientDetails.clientName,\n          clientPhone: clientDetails.clientPhone,\n          clientAddress: clientDetails.clientAddress,\n        };\n      });\n      const updatedEntries = await Promise.all(clientDetailsPromises);\n\n      setClientDtlRows(updatedEntries);\n      console.log(\"update:\", updatedEntries);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchClientDetails = async (clientId, row) => {\n    try {\n      const response = await axios.get(\n        `/api/v1/client/getClientPersonalDetailsById/${clientId}`\n      );\n      const clientName = response.data.clientPersonal.CustomerName;\n      const clientPhone = response.data.clientPersonal.MobileNo1;\n      const clientAddress = response.data.clientPersonal.Address;\n\n      return { ...row, clientName, clientPhone, clientAddress };\n    } catch (error) {\n      console.log(error);\n      return row; // Return the original row in case of an error\n    }\n  };\n\n  useEffect(() => {\n    fetchCenterRows();\n    fetchClientLoanDtls(salesExecId, selectedCenterId); // Add this line\n  }, []);\n\n  return (\n    <>\n      <SalesExecNavbar />\n      <Box mt={10}>\n        <section>\n          <Box\n            sx={{\n              backgroundColor: \"white\",\n              width: \"100%\",\n              minHeight: \"40vh\",\n              padding: \"20px\", // Adding padding to create space around the cards\n            }}\n          >\n            <Grid container spacing={2} alignItems=\"stretch\">\n              {/* Center Selection Section  */}\n              <Grid item xs={12} sm={3}>\n                <Box\n                  sx={{\n                    height: \"100px\",\n                    backgroundColor: \"#A4BE7B\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    padding: \"20px\", // Padding for the inner Box\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <Select\n                    styles={{\n                      control: (baseStyles) => ({\n                        ...baseStyles,\n                        width: \"250px\",\n                        height: \"50px\",\n                        zIndex: \"0\",\n                      }),\n                      provided: (baseStyles) => ({\n                        ...baseStyles,\n                        zIndex: \"9999 !important\",\n                      }),\n                    }}\n                    value={selectedCenter} // Ensure 'value' is being set correctly\n                    onChange={handleCenterSelect}\n                    options={CenterOptions}\n                    placeholder=\"Select Center\"\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"10px\",\n                    height: \"300px\",\n                    backgroundColor: \"#A4BE7B\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    borderRadius: \"10px\",\n                    padding: \"20px\",\n                  }}\n                >\n                  <Card sx={{ height: \"100%\", width: \"100%\", padding: \"10px\" }}>\n                    <Typography variant=\"h6\">Center Details</Typography>\n                    <CardContent>\n                      {selectedCenter && (\n                        <div>\n                          <Typography variant=\"subheading\">\n                            Center Name: {selectedCenter.label}\n                          </Typography>\n                          <br />\n                          <Typography variant=\"subheading\">\n                            Center Code: {selectedCenter.centerCode}\n                          </Typography>\n                          <br />\n                          <Typography variant=\"subheading\">\n                            IFSC: {selectedCenter.IFSC}\n                          </Typography>\n                          <br />\n                          <Typography variant=\"subheading\">\n                            Incharge: {selectedCenter.Incharge}\n                          </Typography>\n                          <br />\n                          {/* Add additional details as needed */}\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                </Box>\n              </Grid>\n\n              {/* Clients table section  */}\n              <Grid item xs={12} sm={9}>\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    backgroundColor: \"#5F8D4E\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\", // Stack items vertically\n                    alignItems: \"flex-end\", // Align items to the right\n                    padding: \"20px\", // Padding for the inner Box\n                    borderRadius: \"10px\",\n                  }}\n                >\n                  <TableContainer component={Paper}>\n                    <Table>\n                      <TableHead>\n                        <TableRow\n                          sx={{ backgroundColor: \"black\", color: \"white\" }}\n                        >\n                          <TableCell style={{ color: \"white\" }}>Slno</TableCell>\n                          <TableCell style={{ color: \"white\" }}>Name</TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            PhoneNo\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            Address\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            DayOfCollection\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            PayCount\n                          </TableCell>\n                          <TableCell style={{ color: \"white\" }}>\n                            Update\n                          </TableCell>\n                        </TableRow>\n                      </TableHead>\n\n                      <TableBody>\n                        {clientDtlRows\n                          .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                          )\n                          .map((row, index) => (\n                            <TableRow\n                              key={row.slno}\n                              sx={alternateRowColor(index)} // Apply styles here\n                            >\n                              <TableCell>{index + 1}</TableCell>\n                              <TableCell>{row.clientName}</TableCell>\n                              <TableCell>{row.clientPhone}</TableCell>\n                              <TableCell>{row.Address}</TableCell>\n                              <TableCell>{row.DayOfCollection}</TableCell>\n                              <TableCell>\n                                {row.CurrentPayCount}/{row.PayCount}\n                              </TableCell>\n\n                              <TableCell>\n                                <Button variant=\"outlined\">Update</Button>\n                              </TableCell>\n                            </TableRow>\n                          ))}\n                      </TableBody>\n                    </Table>\n                    <TablePagination\n                      rowsPerPageOptions={[5, 10, 25]}\n                      component=\"div\"\n                      count={clientDtlRows.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                  </TableContainer>\n                  {/* Add user Button */}\n                  <Box\n                    sx={{\n                      marginTop: \"10px\",\n                      justifyContent: \"flex-end\", // Align the button to the right\n                    }}\n                  >\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => setOpenClientUpdateDialogue(true)}\n                      sx={{\n                        backgroundColor: \"#285430\",\n                        \"&:hover\": {\n                          backgroundColor: \"#224B0C\",\n                        },\n                        marginRight: \"5px\",\n                      }}\n                    >\n                      Add User\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      // onClick={() => setAddCenterDialogue(true)}\n                      sx={{\n                        backgroundColor: \"#285430\",\n                        \"&:hover\": {\n                          backgroundColor: \"#224B0C\",\n                        },\n                      }}\n                    >\n                      Know More\n                    </Button>\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </section>\n        <section mt={10}></section>\n\n        <Box>\n          <Dialog\n            open={openClientUpdateDialogue}\n            onClose={() => setOpenClientUpdateDialogue(false)}\n          >\n            <DialogTitle>Update Loan Details</DialogTitle>\n            <DialogContent>\n              <DialogContentText>Update Loan details:</DialogContentText>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"16px\",\n                  minWidth: \"100px\",\n                  width: \"500px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <TextField\n                  disabled\n                  label=\"Client Name\"\n                  value={dialogueClientName}\n                  fullWidth\n                />\n                <TextField\n                  disabled\n                  label=\"Client Phone No\"\n                  value={dialogueClientPhone}\n                  fullWidth\n                />\n                <TextField\n                  disabled\n                  label=\"Amount To be paid\"\n                  value={dialogueClientPhone}\n                  fullWidth\n                />\n                <TextField\n                  disabled\n                  label=\"Amount Paid\"\n                  value={dialogueClientPhone}\n                  fullWidth\n                />\n              </Box>\n            </DialogContent>\n          </Dialog>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default SalesExecutiveDashboardPage;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { Route, Routes, BrowserRouter, Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport LoginPage from \"./Pages/LoginPage.jsx\";\nimport AdminDashboardPage from \"./Pages/AdminDashboardPage\";\nimport AddCustomerPage from \"./Pages/AddCustomerPage\";\nimport CenterReportPage from \"./Pages/CenterReportPage\";\n\nimport AddSalesExecutivePage from \"./Pages/AddSalesExecutivePage\";\nimport SalesExecutiveDashboardPage from \"./Pages/SalesExecutiveDashboardPage\";\n\naxios.defaults.baseURL =\n  \"https://www.threelioncredits.in:5443\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<LoginPage />} />\n\t  <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/admin/dashboard\" element={<AdminDashboardPage />} />\n          <Route path=\"/admin/center\" element={<CenterReportPage />} />\n          <Route\n            path=\"/admin/addsalesexec\"\n            element={<AddSalesExecutivePage />}\n          />\n          <Route\n            path=\"/sales-exec/addcustomer\"\n            element={\n              <ProtectedRouteSalesExec>\n                <AddCustomerPage />\n              </ProtectedRouteSalesExec>\n            }\n          />\n          <Route\n            path=\"/sales-exec/dashboard\"\n            element={\n              <ProtectedRouteSalesExec>\n                <SalesExecutiveDashboardPage />\n              </ProtectedRouteSalesExec>\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\nexport const ProtectedRouteSalesExec = ({ children }) => {\n  const isSalesExecAuthorized =\n    localStorage.getItem(\"SalesExec-authorized\") === \"true\";\n  const isAdminAuthorized = localStorage.getItem(\"Admin-authorized\") === \"true\";\n\n  if (isSalesExecAuthorized || isAdminAuthorized) {\n    return children;\n  } else {\n    // Redirect to login if not authorized\n    return <Navigate to=\"/login\" />;\n  }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}